root@4a7f496585d8:/app# ls -la; tmux wait -S done
total 64
drwxr-xr-x 1 root root  4096 Jul 11 18:32 .
drwxr-xr-x 1 root root  4096 Jul 14 23:40 ..
-rw-r--r-- 1 root root  2045 Jul 11 18:32 ciphertexts.txt
-rwxr-xr-x 1 root root 16592 Jul 11 18:32 decrypt
-rw-r--r-- 1 root root  3982 Jul 11 18:32 decrypt.c
-rwxr-xr-x 1 root root 16432 Jul 11 18:32 feal
-rw-r--r-- 1 root root  3472 Jul 11 18:32 feal.c
-rw-r--r-- 1 root root  1307 Jul 11 18:32 pairs.txt
root@4a7f496585d8:/app# gcc -o feal feal.c; tmux wait -S done
root@4a7f496585d8:/app# gcc -o decrypt decrypt.c; tmux wait -S done
root@4a7f496585d8:/app# ./feal pairs.txt > key.txt; tmux wait -S done
Usage: ./feal <plaintext_hex> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt key.txt > plaintexts.txt; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# cat pairs.txt | while read line; do ./feal $line >> key.txt; done; tmux wait -S done
Usage: ./feal <plaintext_hex> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
Usage: ./feal <plaintext_hex> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
Usage: ./feal <plaintext_hex> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
Usage: ./feal <plaintext_hex> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
Usage: ./feal <plaintext_hex> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
Usage: ./feal <plaintext_hex> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
Usage: ./feal <plaintext_hex> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
Usage: ./feal <plaintext_hex> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
Usage: ./feal <plaintext_hex> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
Usage: ./feal <plaintext_hex> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
Usage: ./feal <plaintext_hex> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
Usage: ./feal <plaintext_hex> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
Usage: ./feal <plaintext_hex> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
Usage: ./feal <plaintext_hex> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
Usage: ./feal <plaintext_hex> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
Usage: ./feal <plaintext_hex> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
Usage: ./feal <plaintext_hex> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
Usage: ./feal <plaintext_hex> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
Usage: ./feal <plaintext_hex> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
Usage: ./feal <plaintext_hex> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
Usage: ./feal <plaintext_hex> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
Usage: ./feal <plaintext_hex> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
Usage: ./feal <plaintext_hex> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
Usage: ./feal <plaintext_hex> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
Usage: ./feal <plaintext_hex> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
Usage: ./feal <plaintext_hex> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
Usage: ./feal <plaintext_hex> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
Usage: ./feal <plaintext_hex> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
Usage: ./feal <plaintext_hex> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
Usage: ./feal <plaintext_hex> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
Usage: ./feal <plaintext_hex> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
Usage: ./feal <plaintext_hex> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat key.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# cat pairs.txt; tmux wait -S done
367472469947502207 14898973196205001976
11481431857947448706 5346142787097673784
4051074144031543837 16555285802060947979
8165972080433665788 8696875715612249283
9972738378003966192 6018233438041432470
11318599927276873966 15797507597372169723
9585941997696337035 14490381236297930437
1151682980289636253 16826671919222242445
11561686475120058550 5439466748269058189
10020260893271455112 13875017170109174301
7766742330646343123 9081435054842416868
3548811917282148532 7387320258143304167
6543451278473937141 4055204350235998129
5821567316384747352 13090763837329302956
8892717816099875249 18047614391879988445
6286362421385114657 11612668335137291344
969917954919223847 9577516550118330048
11173041137013672421 674642603109289677
14991993389783615606 12961852210123812757
10518581837585975149 14489629013927051207
6486489703352619910 6088966747878975778
18074549367445928097 1212652528316930580
11889494222507410048 10777443138851028262
13606924429323679924 12057422463484855012
8285750754646352866 16858160492228785980
3666126323848143406 5281228457713044739
10393948287443693806 13324159883617487615
3093566561580818094 17213062171507058293
6231271672050195454 1265005375953323852
6176175378556623193 10814899401714531434
9213474649236274868 12054571636131701347
4935882972948258472 15284522481637527103
root@4a7f496585d8:/app# cat pairs.txt | awk '{ printf "%.0f \n", $1 }' | xargs -I {} printf "0x%05X " {} > keys.txt; tmux wait -S done
printf: ‘367472469947502208 ’: value not completely converted
printf: ‘11481431857947449344 ’: value not completely converted
printf: ‘4051074144031543808 ’: value not completely converted
printf: ‘8165972080433666048 ’: value not completely converted
printf: ‘9972738378003965952 ’: value not completely converted
printf: ‘11318599927276873728 ’: value not completely converted
printf: ‘9585941997696337920 ’: value not completely converted
printf: ‘1151682980289636224 ’: value not completely converted
printf: ‘11561686475120058368 ’: value not completely converted
printf: ‘10020260893271455744 ’: value not completely converted
printf: ‘7766742330646342656 ’: value not completely converted
printf: ‘3548811917282148352 ’: value not completely converted
printf: ‘6543451278473936896 ’: value not completely converted
printf: ‘5821567316384747520 ’: value not completely converted
printf: ‘8892717816099874816 ’: value not completely converted
printf: ‘6286362421385114624 ’: value not completely converted
printf: ‘969917954919223808 ’: value not completely converted
printf: ‘11173041137013671936 ’: value not completely converted
printf: ‘14991993389783615488 ’: value not completely converted
printf: ‘10518581837585975296 ’: value not completely converted
printf: ‘6486489703352620032 ’: value not completely converted
printf: ‘18074549367445927936 ’: value not completely converted
printf: ‘11889494222507409408 ’: value not completely converted
printf: ‘13606924429323679744 ’: value not completely converted
printf: ‘8285750754646352896 ’: value not completely converted
printf: ‘3666126323848143360 ’: value not completely converted
printf: ‘10393948287443693568 ’: value not completely converted
printf: ‘3093566561580817920 ’: value not completely converted
printf: ‘6231271672050195456 ’: value not completely converted
printf: ‘6176175378556622848 ’: value not completely converted
printf: ‘9213474649236275200 ’: value not completely converted
printf: ‘4935882972948258816 ’: value not completely converted
root@4a7f496585d8:/app# awk '{ print $1 }' pairs.txt | xargs -I {} ./feal {} 0x00000 0x00000 0x00000 0x00000 >> keys.txt; tmux wait -S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X \n", ($1 % 1048576), ($2 % 1048576) }' pairs.txt > keys.txt; tmux wait -S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '
> ' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 % 1048576), ($2 % 1048576), ($1 % 1048576), ($2 % 1048576) }' pairs.txt > keys.txt;
tmux wait -S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", (NR % 1048576), (NR % 1048576), (NR % 1048576), (NR % 1048576) }' pairs.txt > keys.txt;
tmux wait -S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 % 1048576), ($2 % 1048576), ($1 % 1048576), ($2 % 1048576) }' pairs.txt > keys.txt;
tmux wait -S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 & 0xFFFFF), ($2 & 0xFFFFF), ($1 & 0xFFFFF), ($2 & 0xFFFFF) }' pairs.txt > keys.txt;
tmux wait -S done
awk: 1: unexpected character '&'
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 & 0xFFFFF), ($2 & 0xFFFFF), (0x00000), (0x00000) }' pairs.txt > keys.txt; tmux wait
-S done
awk: 1: unexpected character '&'
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 % 1048576), ($1 % 1048576), ($1 % 1048576), ($1 % 1048576) }' pairs.txt > keys.txt;
tmux wait -S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 % 1048576), ($1 % 1048576), ($1 % 1048576), ($1 % 1048576) }' pairs.txt > keys.txt;
tmux wait -S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 % 1048576), ($2 % 1048576), ($1 % 1048576), ($2 % 1048576) }' pairs.txt > keys.txt;
tmux wait -S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 & 0xFFFFF), ($2 & 0xFFFFF), (0x00000), (0x00000) }' pairs.txt > keys.txt; tmux wait
-S done
awk: 1: unexpected character '&'
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 % 1048576), ($2 % 1048576), ($1 % 1048576), ($2 % 1048576) }' pairs.txt > keys.txt;
tmux wait -S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 % 1048576), ($1 % 1048576), ($2 % 1048576), ($2 % 1048576) }' pairs.txt > keys.txt;
tmux wait -S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 % 1048576), ($2 % 1048576), (0x00000), (0x00000) }' pairs.txt > keys.txt; tmux wait
-S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 % 1048576), ($2 % 1048576), (0x00000), (0x00000) }' pairs.txt > keys.txt; tmux wait
-S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 % 1048576), ($2 % 1048576), ($1 % 1048576), ($2 % 1048576) }' pairs.txt > keys.txt;
tmux wait -S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 % 1048576), ($2 % 1048576), (0x00000), (0x00000) }' pairs.txt > keys.txt; tmux wait
-S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 & 0xFFFFF), ($2 & 0xFFFFF), ($1 & 0xFFFFF), ($2 & 0xFFFFF) }' pairs.txt > keys.txt;
tmux wait -S done
awk: 1: unexpected character '&'
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 % 1048576), ($2 % 1048576), (0x00000), (0x00000) }' pairs.txt > keys.txt; tmux wait
-S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 % 1048576), ($2 % 1048576), ($1 % 1048576), ($2 % 1048576) }' pairs.txt > keys.txt;
tmux wait -S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 % 1048576), ($2 % 1048576), (0x00000), (0x00000) }' pairs.txt > keys.txt; tmux wait
-S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 % 1048576), ($2 % 1048576), (0x00000), (0x00000) }' pairs.txt > keys.txt; tmux wait
-S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 & 0xFFFFF), ($2 & 0xFFFFF), (0x00000), (0x00000) }' pairs.txt > keys.txt; tmux wait
-S done
awk: 1: unexpected character '&'
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 % 1048576), ($2 % 1048576), (0x00000), (0x00000) }' pairs.txt > keys.txt; tmux wait
-S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 % 1048576), ($2 % 1048576), (0x00000), (0x00000) }' pairs.txt > keys.txt; tmux wait
-S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 % 1048576), ($2 % 1048576), (0x00000), (0x00000) }' pairs.txt > keys.txt; tmux wait
-S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 % 1048576), ($2 % 1048576), ($1 % 1048576), ($2 % 1048576) }' pairs.txt > keys.txt;
tmux wait -S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 % 1048576), ($2 % 1048576), (0x00000), (0x00000) }' pairs.txt > keys.txt; tmux wait
-S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 % 1048576), ($2 % 1048576), (0x00000), (0x00000) }' pairs.txt > keys.txt; tmux wait
-S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 % 1048576), ($2 % 1048576), (0x00000), (0x00000) }' pairs.txt > keys.txt; tmux wait
-S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 % 1048576), ($2 % 1048576), (0x00000), (0x00000) }' pairs.txt > keys.txt; tmux wait
-S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 % 1048576), ($2 % 1048576), (0x00000), (0x00000) }' pairs.txt > keys.txt; tmux wait
-S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 & 0xFFFFF), ($2 & 0xFFFFF), (0x00000), (0x00000) }' pairs.txt > keys.txt; tmux wait
-S done
awk: 1: unexpected character '&'
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 % 1048576), ($2 % 1048576), (0x00000), (0x00000) }' pairs.txt > keys.txt; tmux wait
-S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 % 1048576), ($2 % 1048576), (0x00000), (0x00000) }' pairs.txt > keys.txt; tmux wait
-S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 % 1048576), ($2 % 1048576), (0x00000), (0x00000) }' pairs.txt > keys.txt; tmux wait
-S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 % 1048576), ($2 % 1048576), (0x00000), (0x00000) }' pairs.txt > keys.txt; tmux wait
-S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 % 1048576), ($2 % 1048576), (0x00000), (0x00000) }' pairs.txt > keys.txt; tmux wait
-S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 % 1048576), ($2 % 1048576), (0x00000), (0x00000) }' pairs.txt > keys.txt; tmux wait
-S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 % 1048576), ($2 % 1048576), (0x00000), (0x00000) }' pairs.txt > keys.txt; tmux wait
-S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 & 0xFFFFF), ($2 & 0xFFFFF), (0x00000), (0x00000) }' pairs.txt > keys.txt; tmux wait
-S done
awk: 1: unexpected character '&'
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 % 1048576), ($2 % 1048576), (0x00000), (0x00000) }' pairs.txt > keys.txt; tmux wait
-S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 % 1048576), ($2 % 1048576), (0x00000), (0x00000) }' pairs.txt > keys.txt; tmux wait
-S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 % 1048576), ($2 % 1048576), (0x00000), (0x00000) }' pairs.txt > keys.txt; tmux wait
-S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 % 1048576), ($2 % 1048576), (0x00000), (0x00000) }' pairs.txt > keys.txt; tmux wait
-S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 % 1048576), ($2 % 1048576), (0x00000), (0x00000) }' pairs.txt > keys.txt; tmux wait
-S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app# awk '{ printf "0x%05X 0x%05X 0x%05X 0x%05X \n", ($1 % 1048576), ($2 % 1048576), (0x00000), (0x00000) }' pairs.txt > keys.txt; tmux wait
-S done
root@4a7f496585d8:/app# cat keys.txt | tr ' ' '\n' | sort -u > sorted_keys.txt; tmux wait -S done
root@4a7f496585d8:/app# ./decrypt ciphertexts.txt `cat sorted_keys.txt`; tmux wait -S done
Usage: ./decrypt <ciphertext_file> <key0_hex> <key1_hex> <key2_hex> <key3_hex>
Each key must be a 20-bit value (0x00000 to 0xFFFFF)
root@4a7f496585d8:/app#
