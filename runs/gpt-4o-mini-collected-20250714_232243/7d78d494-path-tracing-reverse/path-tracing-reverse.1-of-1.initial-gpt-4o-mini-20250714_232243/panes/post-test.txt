root@e0d3af6033d6:/app# bash /tests/run-tests.sh; tmux wait -S done
Hit:1 http://archive.ubuntu.com/ubuntu noble InRelease
Get:2 http://security.ubuntu.com/ubuntu noble-security InRelease [126 kB]
Get:3 http://archive.ubuntu.com/ubuntu noble-updates InRelease [126 kB]
Get:4 http://archive.ubuntu.com/ubuntu noble-backports InRelease [126 kB]
Get:5 http://security.ubuntu.com/ubuntu noble-security/main amd64 Packages [1241 kB]
Get:6 http://archive.ubuntu.com/ubuntu noble-updates/main amd64 Packages [1567 kB]
Get:7 http://security.ubuntu.com/ubuntu noble-security/restricted amd64 Packages [1742 kB]
Get:8 http://security.ubuntu.com/ubuntu noble-security/universe amd64 Packages [1126 kB]
Get:9 http://archive.ubuntu.com/ubuntu noble-updates/universe amd64 Packages [1436 kB]
Fetched 7492 kB in 1s (10.8 MB/s)
Reading package lists... Done
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
curl is already the newest version (8.5.0-2ubuntu10.6).
0 upgraded, 0 newly installed, 0 to remove and 30 not upgraded.
downloading uv 0.7.13 x86_64-unknown-linux-gnu
no checksums to verify
installing to /root/.local/bin
  uv
  uvx
everything's installed!
error: Project is already initialized in `/app` (`pyproject.toml` file exists)
Resolved 7 packages in 1ms
Audited 5 packages in 0.05ms
===================================================================== test session starts ======================================================================
platform linux -- Python 3.12.3, pytest-8.4.1, pluggy-1.6.0
rootdir: /tests
collected 3 items

../tests/test_outputs.py ..F                                                                                                                             [100%]

=========================================================================== FAILURES ===========================================================================
____________________________________________________________________ test_image_similarity _____________________________________________________________________

    def test_image_similarity():
        import numpy as np
        from PIL import Image

        os.popen("cd /tmp; ./mystery; cp /tmp/image.ppm /app/original.ppm").read()

        original = Image.open("/app/original.ppm")

        # Load images using Pillow
        try:
            os.remove("image.ppm")
        except:  # noqa: E722
            pass
        os.popen("cd clean; ./reverse").read()
>       reconstructed = Image.open("/app/clean/image.ppm")
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/tests/test_outputs.py:40:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

fp = '/app/clean/image.ppm', mode = 'r', formats = ['BMP', 'DIB', 'GIF', 'JPEG', 'PPM', 'PNG']

    def open(
        fp: StrOrBytesPath | IO[bytes],
        mode: Literal["r"] = "r",
        formats: list[str] | tuple[str, ...] | None = None,
    ) -> ImageFile.ImageFile:
        """
        Opens and identifies the given image file.

        This is a lazy operation; this function identifies the file, but
        the file remains open and the actual image data is not read from
        the file until you try to process the data (or call the
        :py:meth:`~PIL.Image.Image.load` method).  See
        :py:func:`~PIL.Image.new`. See :ref:`file-handling`.

        :param fp: A filename (string), os.PathLike object or a file object.
           The file object must implement ``file.read``,
           ``file.seek``, and ``file.tell`` methods,
           and be opened in binary mode. The file object will also seek to zero
           before reading.
        :param mode: The mode.  If given, this argument must be "r".
        :param formats: A list or tuple of formats to attempt to load the file in.
           This can be used to restrict the set of formats checked.
           Pass ``None`` to try all supported formats. You can print the set of
           available formats by running ``python3 -m PIL`` or using
           the :py:func:`PIL.features.pilinfo` function.
        :returns: An :py:class:`~PIL.Image.Image` object.
        :exception FileNotFoundError: If the file cannot be found.
        :exception PIL.UnidentifiedImageError: If the image cannot be opened and
           identified.
        :exception ValueError: If the ``mode`` is not "r", or if a ``StringIO``
           instance is used for ``fp``.
        :exception TypeError: If ``formats`` is not ``None``, a list or a tuple.
        """

        if mode != "r":
            msg = f"bad mode {repr(mode)}"  # type: ignore[unreachable]
            raise ValueError(msg)
        elif isinstance(fp, io.StringIO):
            msg = (  # type: ignore[unreachable]
                "StringIO cannot be used to open an image. "
                "Binary data must be used instead."
            )
            raise ValueError(msg)

        if formats is None:
            formats = ID
        elif not isinstance(formats, (list, tuple)):
            msg = "formats must be a list or tuple"  # type: ignore[unreachable]
            raise TypeError(msg)

        exclusive_fp = False
        filename: str | bytes = ""
        if is_path(fp):
            filename = os.fspath(fp)

        if filename:
>           fp = builtins.open(filename, "rb")
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E           FileNotFoundError: [Errno 2] No such file or directory: '/app/clean/image.ppm'

.venv/lib/python3.12/site-packages/PIL/Image.py:3505: FileNotFoundError
--------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------
Creating high-resolution image: 800x600
This will be downsampled with ffmpeg after rendering
Rendering high-resolution image...
Progress: 99.8%
Rendering complete
Wrote image to image.ppm
Done.
============================================================================ PASSES ============================================================================
=================================================================== short test summary info ====================================================================
PASSED ../tests/test_outputs.py::test_image_c_exists
PASSED ../tests/test_outputs.py::test_image_compiles
FAILED ../tests/test_outputs.py::test_image_similarity - FileNotFoundError: [Errno 2] No such file or directory: '/app/clean/image.ppm'
================================================================= 1 failed, 2 passed in 0.92s ==================================================================
root@e0d3af6033d6:/app#
