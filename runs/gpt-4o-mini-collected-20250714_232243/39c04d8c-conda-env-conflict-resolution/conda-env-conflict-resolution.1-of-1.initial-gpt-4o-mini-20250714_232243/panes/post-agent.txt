root@f9e6a6da20d5:/app# echo "name: datasci
> channels:
>   - defaults
> dependencies:
>   - python=3.8
>   - numpy=1.21
>   - scipy=1.7.1
>   - tensorflow=2.8
>   - pytorch=1.12.0 torchvision torchaudio -c pytorch
>   - other-packages-here" > /app/project/environment.yml
root@f9e6a6da20d5:/app# conda env create -f /app/project/environment.yml; tmux wait -S done
Channels:
 - defaults
Platform: linux-64
Collecting package metadata (repodata.json): done
Solving environment: failed

LibMambaUnsatisfiableError: Encountered problems while solving:
  - unsupported request
  - unsupported request
  - package tensorflow-base-2.8.2-gpu_py37h1986732_0 requires python >=3.7,<3.8.0a0, but none of the providers can be installed

Could not solve for environment specs
The following packages are incompatible
├─ numpy =1.21 * is installable with the potential options
│  ├─ numpy [1.21.2|1.21.5|...|1.26.4] would require
│  │  ├─ blas ==1.0 mkl, which can be installed;
│  │  └─ python >=3.10,<3.11.0a0 *, which can be installed;
│  ├─ numpy [1.21.5|1.21.6|...|1.26.4] would require
│  │  ├─ blas =* openblas, which conflicts with any installable versions previously reported;
│  │  └─ libopenblas [>=0.3.20,<1.0a0 *|>=0.3.21,<1.0a0 *], which requires
│  │     └─ libgfortran5 >=11.2.0 * with the potential options
│  │        ├─ libgfortran5 11.2.0 would require
│  │        │  └─ libgfortran-ng ==11.2.0 *_0, which can be installed;
│  │        └─ libgfortran5 11.2.0 would require
│  │           └─ libgfortran-ng ==11.2.0 *_1, which can be installed;
│  ├─ numpy [1.21.2|1.21.5|...|1.26.4] would require
│  │  ├─ blas ==1.0 mkl, which can be installed;
│  │  └─ python >=3.9,<3.10.0a0 *, which can be installed;
│  ├─ numpy [1.21.2|1.21.5|1.21.6] would require
│  │  └─ blas ==1.0 mkl, which can be installed;
│  ├─ numpy [1.21.2|1.21.5|1.22.3] would require
│  │  ├─ blas =* openblas, which conflicts with any installable versions previously reported;
│  │  └─ python >=3.10,<3.11.0a0 *, which can be installed;
│  ├─ numpy [1.21.2|1.21.5] would require
│  │  ├─ blas ==1.0 mkl, which can be installed;
│  │  └─ python >=3.7,<3.8.0a0 *, which can be installed;
│  ├─ numpy [1.21.2|1.21.5] would require
│  │  ├─ blas =* openblas, which conflicts with any installable versions previously reported;
│  │  └─ python >=3.7,<3.8.0a0 *, which can be installed;
│  ├─ numpy [1.21.2|1.21.5] would require
│  │  └─ blas =* openblas, which conflicts with any installable versions previously reported;
│  └─ numpy [1.21.2|1.21.5|1.22.3] would require
│     ├─ blas =* openblas, which conflicts with any installable versions previously reported;
│     └─ python >=3.9,<3.10.0a0 *, which can be installed;
├─ other-packages-here =* * does not exist (perhaps a typo or a missing channel);
├─ python =3.8 * is not installable because it conflicts with any installable versions previously reported;
├─ pytorch ==1.12.0torchvisiontorchaudio.0c pytorch does not exist (perhaps a typo or a missing channel);
├─ scipy =1.7.1 * is installable with the potential options
│  ├─ scipy 1.7.1 would require
│  │  ├─ blas =* openblas, which conflicts with any installable versions previously reported;
│  │  ├─ libgfortran-ng =* *, which conflicts with any installable versions previously reported;
│  │  ├─ libgfortran4 >=7.5.0 *, which requires
│  │  │  └─ libgfortran-ng ==7.5.0 *_17, which can be installed;
│  │  └─ python >=3.7,<3.8.0a0 *, which can be installed;
│  ├─ scipy 1.7.1 would require
│  │  ├─ blas ==1.0 mkl, which can be installed;
│  │  └─ python >=3.7,<3.8.0a0 *, which can be installed;
│  ├─ scipy 1.7.1 would require
│  │  ├─ blas ==1.0 mkl, which can be installed;
│  │  └─ python >=3.8,<3.9.0a0 *, which conflicts with any installable versions previously reported;
│  ├─ scipy 1.7.1 would require
│  │  ├─ blas =* openblas, which conflicts with any installable versions previously reported;
│  │  ├─ libgfortran-ng =* *, which conflicts with any installable versions previously reported;
│  │  ├─ libgfortran4 >=7.5.0 *, which can be installed (as previously explained);
│  │  └─ python >=3.8,<3.9.0a0 *, which conflicts with any installable versions previously reported;
│  └─ scipy 1.7.1 would require
│     └─ python >=3.9,<3.10.0a0 *, which can be installed;
└─ tensorflow =2.8 * is installable with the potential options
   ├─ tensorflow 2.8.2 would require
   │  └─ tensorflow-base [==2.8.2 eigen_py37h980454f_0|==2.8.2 gpu_py37h1986732_0|==2.8.2 mkl_py37hf890080_0], which requires
   │     └─ python >=3.7,<3.8.0a0 *, which can be installed;
   ├─ tensorflow 2.8.2 would require
   │  └─ tensorflow-base [==2.8.2 eigen_py310h980454f_0|==2.8.2 gpu_py310h1986732_0|==2.8.2 mkl_py310hf890080_0], which requires
   │     └─ python >=3.10,<3.11.0a0 *, which can be installed;
   ├─ tensorflow 2.8.2 would require
   │  └─ tensorflow-base [==2.8.2 eigen_py38h980454f_0|==2.8.2 gpu_py38h1986732_0|==2.8.2 mkl_py38hf890080_0], which requires
   │     ├─ numpy [>=1.22.3,<2.0a0 *|>=1.23.1,<2.0a0 *] with the potential options
   │     │  ├─ numpy [1.21.2|1.21.5|...|1.26.4], which can be installed (as previously explained);
   │     │  ├─ numpy [1.21.5|1.21.6|...|1.26.4], which cannot be installed (as previously explained);
   │     │  ├─ numpy [1.22.3|1.23.1|...|1.24.3] would require
   │     │  │  └─ blas ==1.0 mkl, which can be installed;
   │     │  ├─ numpy [1.21.2|1.21.5|...|1.26.4], which can be installed (as previously explained);
   │     │  ├─ numpy 1.23.3 would require
   │     │  │  └─ numpy-base ==1.23.3 py310h375b286_0, which does not exist (perhaps a missing channel);
   │     │  ├─ numpy 1.23.3 would require
   │     │  │  └─ numpy-base ==1.23.3 py310h8e6c178_0, which does not exist (perhaps a missing channel);
   │     │  ├─ numpy [1.22.3|1.23.5|...|1.26.4] would require
   │     │  │  ├─ blas ==1.0 mkl, which can be installed;
   │     │  │  └─ python >=3.11,<3.12.0a0 *, which can be installed;
   │     │  ├─ numpy [1.26.0|1.26.2|1.26.3|1.26.4] would require
   │     │  │  ├─ blas ==1.0 mkl, which can be installed;
   │     │  │  └─ python >=3.12,<3.13.0a0 *, which can be installed;
   │     │  ├─ numpy [1.21.2|1.21.5|1.22.3], which cannot be installed (as previously explained);
   │     │  ├─ numpy [1.21.2|1.21.5|1.22.3], which cannot be installed (as previously explained);
   │     │  └─ numpy 1.22.3 would require
   │     │     └─ blas =* openblas, which conflicts with any installable versions previously reported;
   │     └─ python >=3.8,<3.9.0a0 *, which conflicts with any installable versions previously reported;
   └─ tensorflow 2.8.2 would require
      └─ tensorflow-base [==2.8.2 eigen_py39h980454f_0|==2.8.2 gpu_py39h1986732_0|==2.8.2 mkl_py39hf890080_0], which requires
         └─ python >=3.9,<3.10.0a0 *, which can be installed.

root@f9e6a6da20d5:/app# source activate datasci
bash: activate: No such file or directory
root@f9e6a6da20d5:/app# python /app/project/test_imports.py; tmux wait -S done
Testing imports for all required packages...
Testing numpy...
Traceback (most recent call last):
  File "/app/project/test_imports.py", line 44, in <module>
    test_environment()
    ~~~~~~~~~~~~~~~~^^
  File "/app/project/test_imports.py", line 12, in test_environment
    import numpy
ModuleNotFoundError: No module named 'numpy'
root@f9e6a6da20d5:/app# echo "name: datasci
> channels:
>   - defaults
> dependencies:
>   - python=3.8
>   - numpy=1.21.5
>   - scipy=1.7.1
>   - tensorflow=2.8.2
>   - pytorch=1.12.0 torchvision torchaudio -c pytorch
>   - other-packages-here" > /app/project/environment.yml
root@f9e6a6da20d5:/app# conda env create -f /app/project/environment.yml; tmux wait -S done
Channels:
 - defaults
Platform: linux-64
Collecting package metadata (repodata.json): done
Solving environment: failed

LibMambaUnsatisfiableError: Encountered problems while solving:
  - unsupported request
  - unsupported request
  - package tensorflow-base-2.8.2-gpu_py37h1986732_0 requires python >=3.7,<3.8.0a0, but none of the providers can be installed

Could not solve for environment specs
The following packages are incompatible
├─ numpy =1.21.5 * is installable with the potential options
│  ├─ numpy [1.21.5|1.22.3|...|1.26.4] would require
│  │  ├─ blas ==1.0 mkl, which can be installed;
│  │  └─ python >=3.10,<3.11.0a0 *, which can be installed;
│  ├─ numpy [1.21.5|1.22.3|...|1.26.4] would require
│  │  ├─ blas =* openblas, which conflicts with any installable versions previously reported;
│  │  └─ libopenblas [>=0.3.20,<1.0a0 *|>=0.3.21,<1.0a0 *], which requires
│  │     └─ libgfortran5 >=11.2.0 * with the potential options
│  │        ├─ libgfortran5 11.2.0 would require
│  │        │  └─ libgfortran-ng ==11.2.0 *_0, which can be installed;
│  │        └─ libgfortran5 11.2.0 would require
│  │           └─ libgfortran-ng ==11.2.0 *_1, which can be installed;
│  ├─ numpy [1.21.5|1.22.3|...|1.26.4] would require
│  │  ├─ blas ==1.0 mkl, which can be installed;
│  │  └─ python >=3.9,<3.10.0a0 *, which can be installed;
│  ├─ numpy 1.21.5 would require
│  │  └─ blas ==1.0 mkl, which can be installed;
│  ├─ numpy [1.21.5|1.22.3] would require
│  │  ├─ blas =* openblas, which conflicts with any installable versions previously reported;
│  │  └─ python >=3.10,<3.11.0a0 *, which can be installed;
│  ├─ numpy 1.21.5 would require
│  │  ├─ blas ==1.0 mkl, which can be installed;
│  │  └─ python >=3.7,<3.8.0a0 *, which can be installed;
│  ├─ numpy 1.21.5 would require
│  │  ├─ blas =* openblas, which conflicts with any installable versions previously reported;
│  │  └─ python >=3.7,<3.8.0a0 *, which can be installed;
│  ├─ numpy 1.21.5 would require
│  │  └─ blas =* openblas, which conflicts with any installable versions previously reported;
│  └─ numpy [1.21.5|1.22.3] would require
│     ├─ blas =* openblas, which conflicts with any installable versions previously reported;
│     └─ python >=3.9,<3.10.0a0 *, which can be installed;
├─ other-packages-here =* * does not exist (perhaps a typo or a missing channel);
├─ python =3.8 * is not installable because it conflicts with any installable versions previously reported;
├─ pytorch ==1.12.0torchvisiontorchaudio.0c pytorch does not exist (perhaps a typo or a missing channel);
├─ scipy =1.7.1 * is installable with the potential options
│  ├─ scipy 1.7.1 would require
│  │  ├─ blas =* openblas, which conflicts with any installable versions previously reported;
│  │  ├─ libgfortran-ng =* *, which conflicts with any installable versions previously reported;
│  │  ├─ libgfortran4 >=7.5.0 *, which requires
│  │  │  └─ libgfortran-ng ==7.5.0 *_17, which can be installed;
│  │  └─ python >=3.7,<3.8.0a0 *, which can be installed;
│  ├─ scipy 1.7.1 would require
│  │  ├─ blas ==1.0 mkl, which can be installed;
│  │  └─ python >=3.7,<3.8.0a0 *, which can be installed;
│  ├─ scipy 1.7.1 would require
│  │  ├─ blas ==1.0 mkl, which can be installed;
│  │  └─ python >=3.8,<3.9.0a0 *, which conflicts with any installable versions previously reported;
│  ├─ scipy 1.7.1 would require
│  │  ├─ blas =* openblas, which conflicts with any installable versions previously reported;
│  │  ├─ libgfortran-ng =* *, which conflicts with any installable versions previously reported;
│  │  ├─ libgfortran4 >=7.5.0 *, which can be installed (as previously explained);
│  │  └─ python >=3.8,<3.9.0a0 *, which conflicts with any installable versions previously reported;
│  └─ scipy 1.7.1 would require
│     └─ python >=3.9,<3.10.0a0 *, which can be installed;
└─ tensorflow =2.8.2 * is installable with the potential options
   ├─ tensorflow 2.8.2 would require
   │  └─ tensorflow-base [==2.8.2 eigen_py37h980454f_0|==2.8.2 gpu_py37h1986732_0|==2.8.2 mkl_py37hf890080_0], which requires
   │     └─ python >=3.7,<3.8.0a0 *, which can be installed;
   ├─ tensorflow 2.8.2 would require
   │  └─ tensorflow-base [==2.8.2 eigen_py310h980454f_0|==2.8.2 gpu_py310h1986732_0|==2.8.2 mkl_py310hf890080_0], which requires
   │     └─ python >=3.10,<3.11.0a0 *, which can be installed;
   ├─ tensorflow 2.8.2 would require
   │  └─ tensorflow-base [==2.8.2 eigen_py38h980454f_0|==2.8.2 gpu_py38h1986732_0|==2.8.2 mkl_py38hf890080_0], which requires
   │     ├─ numpy [>=1.22.3,<2.0a0 *|>=1.23.1,<2.0a0 *] with the potential options
   │     │  ├─ numpy [1.21.5|1.22.3|...|1.26.4], which can be installed (as previously explained);
   │     │  ├─ numpy [1.21.5|1.22.3|...|1.26.4], which cannot be installed (as previously explained);
   │     │  ├─ numpy [1.22.3|1.23.1|...|1.24.3] would require
   │     │  │  └─ blas ==1.0 mkl, which can be installed;
   │     │  ├─ numpy [1.21.5|1.22.3|...|1.26.4], which can be installed (as previously explained);
   │     │  ├─ numpy 1.23.3 would require
   │     │  │  └─ numpy-base ==1.23.3 py310h375b286_0, which does not exist (perhaps a missing channel);
   │     │  ├─ numpy 1.23.3 would require
   │     │  │  └─ numpy-base ==1.23.3 py310h8e6c178_0, which does not exist (perhaps a missing channel);
   │     │  ├─ numpy [1.22.3|1.23.5|...|1.26.4] would require
   │     │  │  ├─ blas ==1.0 mkl, which can be installed;
   │     │  │  └─ python >=3.11,<3.12.0a0 *, which can be installed;
   │     │  ├─ numpy [1.26.0|1.26.2|1.26.3|1.26.4] would require
   │     │  │  ├─ blas ==1.0 mkl, which can be installed;
   │     │  │  └─ python >=3.12,<3.13.0a0 *, which can be installed;
   │     │  ├─ numpy [1.21.5|1.22.3], which cannot be installed (as previously explained);
   │     │  ├─ numpy [1.21.5|1.22.3], which cannot be installed (as previously explained);
   │     │  └─ numpy 1.22.3 would require
   │     │     └─ blas =* openblas, which conflicts with any installable versions previously reported;
   │     └─ python >=3.8,<3.9.0a0 *, which conflicts with any installable versions previously reported;
   └─ tensorflow 2.8.2 would require
      └─ tensorflow-base [==2.8.2 eigen_py39h980454f_0|==2.8.2 gpu_py39h1986732_0|==2.8.2 mkl_py39hf890080_0], which requires
         └─ python >=3.9,<3.10.0a0 *, which can be installed.

root@f9e6a6da20d5:/app# conda activate datasci
python /app/project/test_imports.py; tmux wait -S done

CondaError: Run 'conda init' before 'conda activate'

root@f9e6a6da20d5:/app# python /app/project/test_imports.py; tmux wait -S done
Testing imports for all required packages...
Testing numpy...
Traceback (most recent call last):
  File "/app/project/test_imports.py", line 44, in <module>
    test_environment()
    ~~~~~~~~~~~~~~~~^^
  File "/app/project/test_imports.py", line 12, in test_environment
    import numpy
ModuleNotFoundError: No module named 'numpy'
root@f9e6a6da20d5:/app# conda init
source ~/.bashrc
conda env create -f /app/project/environment.yml; tmux wait -S done
no change     /opt/conda/condabin/conda
no change     /opt/conda/bin/conda
no change     /opt/conda/bin/conda-env
no change     /opt/conda/bin/activate
no change     /opt/conda/bin/deactivate
no change     /opt/conda/etc/profile.d/conda.sh
no change     /opt/conda/etc/fish/conf.d/conda.fish
no change     /opt/conda/shell/condabin/Conda.psm1
no change     /opt/conda/shell/condabin/conda-hook.ps1
no change     /opt/conda/lib/python3.12/site-packages/xontrib/conda.xsh
no change     /opt/conda/etc/profile.d/conda.csh
modified      /root/.bashrc

==> For changes to take effect, close and re-open your current shell. <==

root@f9e6a6da20d5:/app# source ~/.bashrc
(base) root@f9e6a6da20d5:/app# conda env create -f /app/project/environment.yml; tmux wait -S done
Channels:
 - defaults
Platform: linux-64
Collecting package metadata (repodata.json): done
Solving environment: failed

LibMambaUnsatisfiableError: Encountered problems while solving:
  - unsupported request
  - unsupported request
  - package tensorflow-base-2.8.2-gpu_py37h1986732_0 requires python >=3.7,<3.8.0a0, but none of the providers can be installed

Could not solve for environment specs
The following packages are incompatible
├─ numpy =1.21.5 * is installable with the potential options
│  ├─ numpy [1.21.5|1.22.3|...|1.26.4] would require
│  │  ├─ blas ==1.0 mkl, which can be installed;
│  │  └─ python >=3.10,<3.11.0a0 *, which can be installed;
│  ├─ numpy [1.21.5|1.22.3|...|1.26.4] would require
│  │  ├─ blas =* openblas, which conflicts with any installable versions previously reported;
│  │  └─ libopenblas [>=0.3.20,<1.0a0 *|>=0.3.21,<1.0a0 *], which requires
│  │     └─ libgfortran5 >=11.2.0 * with the potential options
│  │        ├─ libgfortran5 11.2.0 would require
│  │        │  └─ libgfortran-ng ==11.2.0 *_0, which can be installed;
│  │        └─ libgfortran5 11.2.0 would require
│  │           └─ libgfortran-ng ==11.2.0 *_1, which can be installed;
│  ├─ numpy [1.21.5|1.22.3|...|1.26.4] would require
│  │  ├─ blas ==1.0 mkl, which can be installed;
│  │  └─ python >=3.9,<3.10.0a0 *, which can be installed;
│  ├─ numpy 1.21.5 would require
│  │  └─ blas ==1.0 mkl, which can be installed;
│  ├─ numpy [1.21.5|1.22.3] would require
│  │  ├─ blas =* openblas, which conflicts with any installable versions previously reported;
│  │  └─ python >=3.10,<3.11.0a0 *, which can be installed;
│  ├─ numpy 1.21.5 would require
│  │  ├─ blas ==1.0 mkl, which can be installed;
│  │  └─ python >=3.7,<3.8.0a0 *, which can be installed;
│  ├─ numpy 1.21.5 would require
│  │  ├─ blas =* openblas, which conflicts with any installable versions previously reported;
│  │  └─ python >=3.7,<3.8.0a0 *, which can be installed;
│  ├─ numpy 1.21.5 would require
│  │  └─ blas =* openblas, which conflicts with any installable versions previously reported;
│  └─ numpy [1.21.5|1.22.3] would require
│     ├─ blas =* openblas, which conflicts with any installable versions previously reported;
│     └─ python >=3.9,<3.10.0a0 *, which can be installed;
├─ other-packages-here =* * does not exist (perhaps a typo or a missing channel);
├─ python =3.8 * is not installable because it conflicts with any installable versions previously reported;
├─ pytorch ==1.12.0torchvisiontorchaudio.0c pytorch does not exist (perhaps a typo or a missing channel);
├─ scipy =1.7.1 * is installable with the potential options
│  ├─ scipy 1.7.1 would require
│  │  ├─ blas =* openblas, which conflicts with any installable versions previously reported;
│  │  ├─ libgfortran-ng =* *, which conflicts with any installable versions previously reported;
│  │  ├─ libgfortran4 >=7.5.0 *, which requires
│  │  │  └─ libgfortran-ng ==7.5.0 *_17, which can be installed;
│  │  └─ python >=3.7,<3.8.0a0 *, which can be installed;
│  ├─ scipy 1.7.1 would require
│  │  ├─ blas ==1.0 mkl, which can be installed;
│  │  └─ python >=3.7,<3.8.0a0 *, which can be installed;
│  ├─ scipy 1.7.1 would require
│  │  ├─ blas ==1.0 mkl, which can be installed;
│  │  └─ python >=3.8,<3.9.0a0 *, which conflicts with any installable versions previously reported;
│  ├─ scipy 1.7.1 would require
│  │  ├─ blas =* openblas, which conflicts with any installable versions previously reported;
│  │  ├─ libgfortran-ng =* *, which conflicts with any installable versions previously reported;
│  │  ├─ libgfortran4 >=7.5.0 *, which can be installed (as previously explained);
│  │  └─ python >=3.8,<3.9.0a0 *, which conflicts with any installable versions previously reported;
│  └─ scipy 1.7.1 would require
│     └─ python >=3.9,<3.10.0a0 *, which can be installed;
└─ tensorflow =2.8.2 * is installable with the potential options
   ├─ tensorflow 2.8.2 would require
   │  └─ tensorflow-base [==2.8.2 eigen_py37h980454f_0|==2.8.2 gpu_py37h1986732_0|==2.8.2 mkl_py37hf890080_0], which requires
   │     └─ python >=3.7,<3.8.0a0 *, which can be installed;
   ├─ tensorflow 2.8.2 would require
   │  └─ tensorflow-base [==2.8.2 eigen_py310h980454f_0|==2.8.2 gpu_py310h1986732_0|==2.8.2 mkl_py310hf890080_0], which requires
   │     └─ python >=3.10,<3.11.0a0 *, which can be installed;
   ├─ tensorflow 2.8.2 would require
   │  └─ tensorflow-base [==2.8.2 eigen_py38h980454f_0|==2.8.2 gpu_py38h1986732_0|==2.8.2 mkl_py38hf890080_0], which requires
   │     ├─ numpy [>=1.22.3,<2.0a0 *|>=1.23.1,<2.0a0 *] with the potential options
   │     │  ├─ numpy [1.21.5|1.22.3|...|1.26.4], which can be installed (as previously explained);
   │     │  ├─ numpy [1.21.5|1.22.3|...|1.26.4], which cannot be installed (as previously explained);
   │     │  ├─ numpy [1.22.3|1.23.1|...|1.24.3] would require
   │     │  │  └─ blas ==1.0 mkl, which can be installed;
   │     │  ├─ numpy [1.21.5|1.22.3|...|1.26.4], which can be installed (as previously explained);
   │     │  ├─ numpy 1.23.3 would require
   │     │  │  └─ numpy-base ==1.23.3 py310h375b286_0, which does not exist (perhaps a missing channel);
   │     │  ├─ numpy 1.23.3 would require
   │     │  │  └─ numpy-base ==1.23.3 py310h8e6c178_0, which does not exist (perhaps a missing channel);
   │     │  ├─ numpy [1.22.3|1.23.5|...|1.26.4] would require
   │     │  │  ├─ blas ==1.0 mkl, which can be installed;
   │     │  │  └─ python >=3.11,<3.12.0a0 *, which can be installed;
   │     │  ├─ numpy [1.26.0|1.26.2|1.26.3|1.26.4] would require
   │     │  │  ├─ blas ==1.0 mkl, which can be installed;
   │     │  │  └─ python >=3.12,<3.13.0a0 *, which can be installed;
   │     │  ├─ numpy [1.21.5|1.22.3], which cannot be installed (as previously explained);
   │     │  ├─ numpy [1.21.5|1.22.3], which cannot be installed (as previously explained);
   │     │  └─ numpy 1.22.3 would require
   │     │     └─ blas =* openblas, which conflicts with any installable versions previously reported;
   │     └─ python >=3.8,<3.9.0a0 *, which conflicts with any installable versions previously reported;
   └─ tensorflow 2.8.2 would require
      └─ tensorflow-base [==2.8.2 eigen_py39h980454f_0|==2.8.2 gpu_py39h1986732_0|==2.8.2 mkl_py39hf890080_0], which requires
         └─ python >=3.9,<3.10.0a0 *, which can be installed.

(base) root@f9e6a6da20d5:/app# conda activate datasci
python /app/project/test_imports.py; tmux wait -S done

EnvironmentNameNotFound: Could not find conda environment: datasci
You can list all discoverable environments with `conda info --envs`.


(base) root@f9e6a6da20d5:/app# python /app/project/test_imports.py; tmux wait -S done
Testing imports for all required packages...
Testing numpy...
Traceback (most recent call last):
  File "/app/project/test_imports.py", line 44, in <module>
    test_environment()
  File "/app/project/test_imports.py", line 12, in test_environment
    import numpy
ModuleNotFoundError: No module named 'numpy'
(base) root@f9e6a6da20d5:/app# echo "name: datasci
> channels:
>   - defaults
> dependencies:
>   - python=3.9
>   - numpy=1.21.5
>   - scipy=1.7.1
>   - tensorflow=2.8.2
>   - pytorch=1.12.0 torchvision torchaudio -c pytorch
>   - other-packages-here" > /app/project/environment.yml
(base) root@f9e6a6da20d5:/app# conda env create -f /app/project/environment.yml; tmux wait -S done
Channels:
 - defaults
Platform: linux-64
Collecting package metadata (repodata.json): done
Solving environment: failed

LibMambaUnsatisfiableError: Encountered problems while solving:
  - unsupported request
  - unsupported request
  - package tensorflow-base-2.8.2-gpu_py37h1986732_0 requires python >=3.7,<3.8.0a0, but none of the providers can be installed

Could not solve for environment specs
The following packages are incompatible
├─ numpy =1.21.5 * is installable with the potential options
│  ├─ numpy [1.21.5|1.22.3|...|1.26.4] would require
│  │  ├─ blas ==1.0 mkl, which can be installed;
│  │  └─ python >=3.10,<3.11.0a0 * with the potential options
│  │     ├─ python [3.10.15|3.10.16|3.8.20] would require
│  │     │  └─ openssl >=3.0.15,<4.0a0 *, which can be installed;
│  │     ├─ python [3.10.0|3.10.10|...|3.10.9], which can be installed;
│  │     └─ python 3.10.18 would require
│  │        └─ openssl >=3.0.16,<4.0a0 *, which can be installed;
│  ├─ numpy [1.21.5|1.22.3|...|1.26.4] would require
│  │  ├─ blas =* openblas, which conflicts with any installable versions previously reported;
│  │  └─ libopenblas [>=0.3.20,<1.0a0 *|>=0.3.21,<1.0a0 *], which requires
│  │     └─ libgfortran5 >=11.2.0 * with the potential options
│  │        ├─ libgfortran5 11.2.0 would require
│  │        │  └─ libgfortran-ng ==11.2.0 *_0, which can be installed;
│  │        └─ libgfortran5 11.2.0 would require
│  │           └─ libgfortran-ng ==11.2.0 *_1, which can be installed;
│  ├─ numpy [1.21.5|1.22.3|...|1.24.3] would require
│  │  ├─ blas ==1.0 mkl, which can be installed;
│  │  └─ python >=3.8,<3.9.0a0 * with the potential options
│  │     ├─ python [3.8.0|3.8.1|...|3.8.8], which can be installed;
│  │     └─ python [3.10.15|3.10.16|3.8.20], which can be installed (as previously explained);
│  ├─ numpy 1.21.5 would require
│  │  └─ blas ==1.0 mkl, which can be installed;
│  ├─ numpy [1.21.5|1.22.3] would require
│  │  ├─ blas =* openblas, which conflicts with any installable versions previously reported;
│  │  └─ python >=3.10,<3.11.0a0 * with the potential options
│  │     ├─ python [3.10.15|3.10.16|3.8.20], which can be installed (as previously explained);
│  │     ├─ python [3.10.0|3.10.10|...|3.10.9], which can be installed;
│  │     └─ python 3.10.18, which can be installed (as previously explained);
│  ├─ numpy 1.21.5 would require
│  │  ├─ blas ==1.0 mkl, which can be installed;
│  │  └─ python >=3.7,<3.8.0a0 *, which can be installed;
│  ├─ numpy 1.21.5 would require
│  │  ├─ blas =* openblas, which conflicts with any installable versions previously reported;
│  │  └─ python >=3.7,<3.8.0a0 *, which can be installed;
│  ├─ numpy [1.21.5|1.22.3] would require
│  │  ├─ blas =* openblas, which conflicts with any installable versions previously reported;
│  │  └─ python >=3.8,<3.9.0a0 * with the potential options
│  │     ├─ python [3.8.0|3.8.1|...|3.8.8], which can be installed;
│  │     └─ python [3.10.15|3.10.16|3.8.20], which can be installed (as previously explained);
│  └─ numpy 1.21.5 would require
│     └─ blas =* openblas, which conflicts with any installable versions previously reported;
├─ other-packages-here =* * does not exist (perhaps a typo or a missing channel);
├─ python =3.9 * is not installable because there are no viable options
│  ├─ python [3.9.0|3.9.1|...|3.9.7] conflicts with any installable versions previously reported;
│  ├─ python [3.11.10|3.11.11|...|3.9.21] would require
│  │  └─ openssl >=3.0.15,<4.0a0 *, which can be installed;
│  └─ python [3.11.13|3.12.11|3.9.23] would require
│     └─ openssl >=3.0.16,<4.0a0 *, which can be installed;
├─ pytorch ==1.12.0torchvisiontorchaudio.0c pytorch does not exist (perhaps a typo or a missing channel);
├─ scipy =1.7.1 * is installable with the potential options
│  ├─ scipy 1.7.1 would require
│  │  ├─ blas =* openblas, which conflicts with any installable versions previously reported;
│  │  ├─ libgfortran-ng =* *, which conflicts with any installable versions previously reported;
│  │  ├─ libgfortran4 >=7.5.0 *, which requires
│  │  │  └─ libgfortran-ng ==7.5.0 *_17, which can be installed;
│  │  └─ python >=3.7,<3.8.0a0 *, which can be installed;
│  ├─ scipy 1.7.1 would require
│  │  ├─ blas ==1.0 mkl, which can be installed;
│  │  └─ python >=3.7,<3.8.0a0 *, which can be installed;
│  ├─ scipy 1.7.1 would require
│  │  ├─ blas ==1.0 mkl, which can be installed;
│  │  └─ python >=3.8,<3.9.0a0 * with the potential options
│  │     ├─ python [3.8.0|3.8.1|...|3.8.8], which can be installed;
│  │     └─ python [3.10.15|3.10.16|3.8.20], which can be installed (as previously explained);
│  ├─ scipy 1.7.1 would require
│  │  ├─ blas =* openblas, which conflicts with any installable versions previously reported;
│  │  ├─ libgfortran-ng =* *, which conflicts with any installable versions previously reported;
│  │  ├─ libgfortran4 >=7.5.0 *, which can be installed (as previously explained);
│  │  └─ python >=3.8,<3.9.0a0 * with the potential options
│  │     ├─ python [3.8.0|3.8.1|...|3.8.8], which can be installed;
│  │     └─ python [3.10.15|3.10.16|3.8.20], which can be installed (as previously explained);
│  ├─ scipy 1.7.1 would require
│  │  ├─ blas ==1.0 mkl, which can be installed;
│  │  └─ python >=3.9,<3.10.0a0 * but there are no viable options
│  │     ├─ python [3.9.0|3.9.1|...|3.9.7] conflicts with any installable versions previously reported;
│  │     ├─ python [3.11.10|3.11.11|...|3.9.21], which cannot be installed (as previously explained);
│  │     └─ python [3.11.13|3.12.11|3.9.23], which cannot be installed (as previously explained);
│  └─ scipy 1.7.1 would require
│     ├─ blas =* openblas, which conflicts with any installable versions previously reported;
│     ├─ libgfortran-ng =* *, which conflicts with any installable versions previously reported;
│     ├─ libgfortran4 >=7.5.0 *, which can be installed (as previously explained);
│     └─ python >=3.9,<3.10.0a0 * but there are no viable options
│        ├─ python [3.9.0|3.9.1|...|3.9.7] conflicts with any installable versions previously reported;
│        ├─ python [3.11.10|3.11.11|...|3.9.21], which cannot be installed (as previously explained);
│        └─ python [3.11.13|3.12.11|3.9.23], which cannot be installed (as previously explained);
└─ tensorflow =2.8.2 * is installable with the potential options
   ├─ tensorflow 2.8.2 would require
   │  └─ tensorflow-base [==2.8.2 eigen_py37h980454f_0|==2.8.2 gpu_py37h1986732_0|==2.8.2 mkl_py37hf890080_0], which requires
   │     └─ python >=3.7,<3.8.0a0 *, which can be installed;
   ├─ tensorflow 2.8.2 would require
   │  └─ tensorflow-base [==2.8.2 eigen_py310h980454f_0|==2.8.2 gpu_py310h1986732_0|==2.8.2 mkl_py310hf890080_0], which requires
   │     └─ python >=3.10,<3.11.0a0 * with the potential options
   │        ├─ python [3.10.15|3.10.16|3.8.20], which can be installed (as previously explained);
   │        ├─ python [3.10.0|3.10.10|...|3.10.9], which can be installed;
   │        └─ python 3.10.18, which can be installed (as previously explained);
   ├─ tensorflow 2.8.2 would require
   │  └─ tensorflow-base [==2.8.2 eigen_py38h980454f_0|==2.8.2 gpu_py38h1986732_0|==2.8.2 mkl_py38hf890080_0], which requires
   │     └─ python >=3.8,<3.9.0a0 * with the potential options
   │        ├─ python [3.8.0|3.8.1|...|3.8.8], which can be installed;
   │        └─ python [3.10.15|3.10.16|3.8.20], which can be installed (as previously explained);
   └─ tensorflow 2.8.2 would require
      └─ tensorflow-base [==2.8.2 eigen_py39h980454f_0|==2.8.2 gpu_py39h1986732_0|==2.8.2 mkl_py39hf890080_0], which requires
         ├─ numpy [>=1.22.3,<2.0a0 *|>=1.23.1,<2.0a0 *] with the potential options
         │  ├─ numpy [1.21.5|1.22.3|...|1.26.4], which can be installed (as previously explained);
         │  ├─ numpy [1.21.5|1.22.3|...|1.26.4], which cannot be installed (as previously explained);
         │  ├─ numpy [1.21.5|1.22.3|...|1.24.3], which can be installed (as previously explained);
         │  ├─ numpy [1.22.3|1.23.1|...|1.26.4] would require
         │  │  └─ blas ==1.0 mkl, which can be installed;
         │  ├─ numpy 1.23.3 would require
         │  │  └─ numpy-base ==1.23.3 py310h375b286_0, which does not exist (perhaps a missing channel);
         │  ├─ numpy 1.23.3 would require
         │  │  └─ numpy-base ==1.23.3 py310h8e6c178_0, which does not exist (perhaps a missing channel);
         │  ├─ numpy [1.22.3|1.23.5|...|1.26.4] would require
         │  │  ├─ blas ==1.0 mkl, which can be installed;
         │  │  └─ python >=3.11,<3.12.0a0 * with the potential options
         │  │     ├─ python [3.11.10|3.11.11|...|3.9.21], which cannot be installed (as previously explained);
         │  │     ├─ python [3.11.13|3.12.11|3.9.23], which cannot be installed (as previously explained);
         │  │     └─ python [3.11.0|3.11.2|...|3.11.9], which can be installed;
         │  ├─ numpy [1.26.0|1.26.2|1.26.3|1.26.4] would require
         │  │  ├─ blas ==1.0 mkl, which can be installed;
         │  │  └─ python >=3.12,<3.13.0a0 * with the potential options
         │  │     ├─ python [3.11.10|3.11.11|...|3.9.21], which cannot be installed (as previously explained);
         │  │     ├─ python [3.11.13|3.12.11|3.9.23], which cannot be installed (as previously explained);
         │  │     └─ python [3.12.0|3.12.1|3.12.2|3.12.3|3.12.4], which can be installed;
         │  ├─ numpy [1.21.5|1.22.3], which cannot be installed (as previously explained);
         │  ├─ numpy [1.21.5|1.22.3], which cannot be installed (as previously explained);
         │  └─ numpy 1.22.3 would require
         │     └─ blas =* openblas, which conflicts with any installable versions previously reported;
         ├─ openssl >=1.1.1q,<1.1.2a *, which conflicts with any installable versions previously reported;
         └─ python >=3.9,<3.10.0a0 * but there are no viable options
            ├─ python [3.9.0|3.9.1|...|3.9.7] conflicts with any installable versions previously reported;
            ├─ python [3.11.10|3.11.11|...|3.9.21], which cannot be installed (as previously explained);
            └─ python [3.11.13|3.12.11|3.9.23], which cannot be installed (as previously explained).

(base) root@f9e6a6da20d5:/app# conda activate datasci
python /app/project/test_imports.py; tmux wait -S done

EnvironmentNameNotFound: Could not find conda environment: datasci
You can list all discoverable environments with `conda info --envs`.


(base) root@f9e6a6da20d5:/app# python /app/project/test_imports.py; tmux wait -S done
Testing imports for all required packages...
Testing numpy...
Traceback (most recent call last):
  File "/app/project/test_imports.py", line 44, in <module>
    test_environment()
  File "/app/project/test_imports.py", line 12, in test_environment
    import numpy
ModuleNotFoundError: No module named 'numpy'
(base) root@f9e6a6da20d5:/app# echo "name: datasci
> channels:
>   - defaults
> dependencies:
>   - python=3.8
>   - numpy=1.21.5
>   - scipy=1.7.1
>   - tensorflow=2.8.2
>   - pytorch=1.12.0 torchvision torchaudio -c pytorch
>   - other-packages-here" > /app/project/environment.yml
(base) root@f9e6a6da20d5:/app# conda env create -f /app/project/environment.yml; tmux wait -S done
Channels:
 - defaults
Platform: linux-64
Collecting package metadata (repodata.json): done
Solving environment: failed

LibMambaUnsatisfiableError: Encountered problems while solving:
  - unsupported request
  - unsupported request
  - package tensorflow-base-2.8.2-gpu_py37h1986732_0 requires python >=3.7,<3.8.0a0, but none of the providers can be installed

Could not solve for environment specs
The following packages are incompatible
├─ numpy =1.21.5 * is installable with the potential options
│  ├─ numpy [1.21.5|1.22.3|...|1.26.4] would require
│  │  ├─ blas ==1.0 mkl, which can be installed;
│  │  └─ python >=3.10,<3.11.0a0 *, which can be installed;
│  ├─ numpy [1.21.5|1.22.3|...|1.26.4] would require
│  │  ├─ blas =* openblas, which conflicts with any installable versions previously reported;
│  │  └─ libopenblas [>=0.3.20,<1.0a0 *|>=0.3.21,<1.0a0 *], which requires
│  │     └─ libgfortran5 >=11.2.0 * with the potential options
│  │        ├─ libgfortran5 11.2.0 would require
│  │        │  └─ libgfortran-ng ==11.2.0 *_0, which can be installed;
│  │        └─ libgfortran5 11.2.0 would require
│  │           └─ libgfortran-ng ==11.2.0 *_1, which can be installed;
│  ├─ numpy [1.21.5|1.22.3|...|1.26.4] would require
│  │  ├─ blas ==1.0 mkl, which can be installed;
│  │  └─ python >=3.9,<3.10.0a0 *, which can be installed;
│  ├─ numpy 1.21.5 would require
│  │  └─ blas ==1.0 mkl, which can be installed;
│  ├─ numpy [1.21.5|1.22.3] would require
│  │  ├─ blas =* openblas, which conflicts with any installable versions previously reported;
│  │  └─ python >=3.10,<3.11.0a0 *, which can be installed;
│  ├─ numpy 1.21.5 would require
│  │  ├─ blas ==1.0 mkl, which can be installed;
│  │  └─ python >=3.7,<3.8.0a0 *, which can be installed;
│  ├─ numpy 1.21.5 would require
│  │  ├─ blas =* openblas, which conflicts with any installable versions previously reported;
│  │  └─ python >=3.7,<3.8.0a0 *, which can be installed;
│  ├─ numpy 1.21.5 would require
│  │  └─ blas =* openblas, which conflicts with any installable versions previously reported;
│  └─ numpy [1.21.5|1.22.3] would require
│     ├─ blas =* openblas, which conflicts with any installable versions previously reported;
│     └─ python >=3.9,<3.10.0a0 *, which can be installed;
├─ other-packages-here =* * does not exist (perhaps a typo or a missing channel);
├─ python =3.8 * is not installable because it conflicts with any installable versions previously reported;
├─ pytorch ==1.12.0torchvisiontorchaudio.0c pytorch does not exist (perhaps a typo or a missing channel);
├─ scipy =1.7.1 * is installable with the potential options
│  ├─ scipy 1.7.1 would require
│  │  ├─ blas =* openblas, which conflicts with any installable versions previously reported;
│  │  ├─ libgfortran-ng =* *, which conflicts with any installable versions previously reported;
│  │  ├─ libgfortran4 >=7.5.0 *, which requires
│  │  │  └─ libgfortran-ng ==7.5.0 *_17, which can be installed;
│  │  └─ python >=3.7,<3.8.0a0 *, which can be installed;
│  ├─ scipy 1.7.1 would require
│  │  ├─ blas ==1.0 mkl, which can be installed;
│  │  └─ python >=3.7,<3.8.0a0 *, which can be installed;
│  ├─ scipy 1.7.1 would require
│  │  ├─ blas ==1.0 mkl, which can be installed;
│  │  └─ python >=3.8,<3.9.0a0 *, which conflicts with any installable versions previously reported;
│  ├─ scipy 1.7.1 would require
│  │  ├─ blas =* openblas, which conflicts with any installable versions previously reported;
│  │  ├─ libgfortran-ng =* *, which conflicts with any installable versions previously reported;
│  │  ├─ libgfortran4 >=7.5.0 *, which can be installed (as previously explained);
│  │  └─ python >=3.8,<3.9.0a0 *, which conflicts with any installable versions previously reported;
│  └─ scipy 1.7.1 would require
│     └─ python >=3.9,<3.10.0a0 *, which can be installed;
└─ tensorflow =2.8.2 * is installable with the potential options
   ├─ tensorflow 2.8.2 would require
   │  └─ tensorflow-base [==2.8.2 eigen_py37h980454f_0|==2.8.2 gpu_py37h1986732_0|==2.8.2 mkl_py37hf890080_0], which requires
   │     └─ python >=3.7,<3.8.0a0 *, which can be installed;
   ├─ tensorflow 2.8.2 would require
   │  └─ tensorflow-base [==2.8.2 eigen_py310h980454f_0|==2.8.2 gpu_py310h1986732_0|==2.8.2 mkl_py310hf890080_0], which requires
   │     └─ python >=3.10,<3.11.0a0 *, which can be installed;
   ├─ tensorflow 2.8.2 would require
   │  └─ tensorflow-base [==2.8.2 eigen_py38h980454f_0|==2.8.2 gpu_py38h1986732_0|==2.8.2 mkl_py38hf890080_0], which requires
   │     ├─ numpy [>=1.22.3,<2.0a0 *|>=1.23.1,<2.0a0 *] with the potential options
   │     │  ├─ numpy [1.21.5|1.22.3|...|1.26.4], which can be installed (as previously explained);
   │     │  ├─ numpy [1.21.5|1.22.3|...|1.26.4], which cannot be installed (as previously explained);
   │     │  ├─ numpy [1.22.3|1.23.1|...|1.24.3] would require
   │     │  │  └─ blas ==1.0 mkl, which can be installed;
   │     │  ├─ numpy [1.21.5|1.22.3|...|1.26.4], which can be installed (as previously explained);
   │     │  ├─ numpy 1.23.3 would require
   │     │  │  └─ numpy-base ==1.23.3 py310h375b286_0, which does not exist (perhaps a missing channel);
   │     │  ├─ numpy 1.23.3 would require
   │     │  │  └─ numpy-base ==1.23.3 py310h8e6c178_0, which does not exist (perhaps a missing channel);
   │     │  ├─ numpy [1.22.3|1.23.5|...|1.26.4] would require
   │     │  │  ├─ blas ==1.0 mkl, which can be installed;
   │     │  │  └─ python >=3.11,<3.12.0a0 *, which can be installed;
   │     │  ├─ numpy [1.26.0|1.26.2|1.26.3|1.26.4] would require
   │     │  │  ├─ blas ==1.0 mkl, which can be installed;
   │     │  │  └─ python >=3.12,<3.13.0a0 *, which can be installed;
   │     │  ├─ numpy [1.21.5|1.22.3], which cannot be installed (as previously explained);
   │     │  ├─ numpy [1.21.5|1.22.3], which cannot be installed (as previously explained);
   │     │  └─ numpy 1.22.3 would require
   │     │     └─ blas =* openblas, which conflicts with any installable versions previously reported;
   │     └─ python >=3.8,<3.9.0a0 *, which conflicts with any installable versions previously reported;
   └─ tensorflow 2.8.2 would require
      └─ tensorflow-base [==2.8.2 eigen_py39h980454f_0|==2.8.2 gpu_py39h1986732_0|==2.8.2 mkl_py39hf890080_0], which requires
         └─ python >=3.9,<3.10.0a0 *, which can be installed.

(base) root@f9e6a6da20d5:/app# conda activate datasci
python /app/project/test_imports.py; tmux wait -S done

EnvironmentNameNotFound: Could not find conda environment: datasci
You can list all discoverable environments with `conda info --envs`.


(base) root@f9e6a6da20d5:/app# python /app/project/test_imports.py; tmux wait -S done
Testing imports for all required packages...
Testing numpy...
Traceback (most recent call last):
  File "/app/project/test_imports.py", line 44, in <module>
    test_environment()
  File "/app/project/test_imports.py", line 12, in test_environment
    import numpy
ModuleNotFoundError: No module named 'numpy'
(base) root@f9e6a6da20d5:/app# echo "name: datasci
> channels:
>   - defaults
> dependencies:
>   - python=3.8
>   - numpy=1.21.5
>   - scipy=1.7.1
>   - tensorflow=2.7.0
>   - pytorch=1.10.2 torchvision torchaudio -c pytorch
>   - other-packages-here" > /app/project/environment.yml
(base) root@f9e6a6da20d5:/app# conda env create -f /app/project/environment.yml; tmux wait -S done
Channels:
 - defaults
Platform: linux-64
Collecting package metadata (repodata.json): done
Solving environment: failed

PackagesNotFoundError: The following packages are not available from current channels:

  - other-packages-here

Current channels:

  - https://repo.anaconda.com/pkgs/main
  - https://repo.anaconda.com/pkgs/r

To search for alternate channels that may provide the conda package you're
looking for, navigate to

    https://anaconda.org

and use the search bar at the top of the page.


(base) root@f9e6a6da20d5:/app# conda activate datasci
python /app/project/test_imports.py; tmux wait -S done

EnvironmentNameNotFound: Could not find conda environment: datasci
You can list all discoverable environments with `conda info --envs`.


(base) root@f9e6a6da20d5:/app# python /app/project/test_imports.py; tmux wait -S done
Testing imports for all required packages...
Testing numpy...
Traceback (most recent call last):
  File "/app/project/test_imports.py", line 44, in <module>
    test_environment()
  File "/app/project/test_imports.py", line 12, in test_environment
    import numpy
ModuleNotFoundError: No module named 'numpy'
(base) root@f9e6a6da20d5:/app# echo "name: datasci
> channels:
>   - defaults
> dependencies:
>   - python=3.8
>   - numpy=1.21.5
>   - scipy=1.7.1
>   - tensorflow=2.7.0
>   - pytorch=1.10.2 torchvision torchaudio -c pytorch" > /app/project/environment.yml
(base) root@f9e6a6da20d5:/app# conda env create -f /app/project/environment.yml; tmux wait -S done
Channels:
 - defaults
Platform: linux-64
Collecting package metadata (repodata.json): done
Solving environment: failed

PackagesNotFoundError: The following packages are not available from current channels:

  - pytorch==1.10.2torchvisiontorchaudio.0c=pytorch

Current channels:

  - https://repo.anaconda.com/pkgs/main
  - https://repo.anaconda.com/pkgs/r

To search for alternate channels that may provide the conda package you're
looking for, navigate to

    https://anaconda.org

and use the search bar at the top of the page.


(base) root@f9e6a6da20d5:/app# conda activate datasci
python /app/project/test_imports.py; tmux wait -S done

EnvironmentNameNotFound: Could not find conda environment: datasci
You can list all discoverable environments with `conda info --envs`.


(base) root@f9e6a6da20d5:/app# python /app/project/test_imports.py; tmux wait -S done
Testing imports for all required packages...
Testing numpy...
Traceback (most recent call last):
  File "/app/project/test_imports.py", line 44, in <module>
    test_environment()
  File "/app/project/test_imports.py", line 12, in test_environment
    import numpy
ModuleNotFoundError: No module named 'numpy'
(base) root@f9e6a6da20d5:/app# echo "name: datasci
> channels:
>   - defaults
>   - conda-forge
> dependencies:
>   - python=3.8
>   - numpy=1.21.5
>   - scipy=1.7.1
>   - tensorflow=2.7.0
>   - pytorch=1.10.2
>   - torchvision=0.11.3
>   - torchaudio=0.10.2" > /app/project/environment.yml
(base) root@f9e6a6da20d5:/app# conda env create -f /app/project/environment.yml; tmux wait -S done
Channels:
 - defaults
 - conda-forge
Platform: linux-64
Collecting package metadata (repodata.json): done
Solving environment: failed

PackagesNotFoundError: The following packages are not available from current channels:

  - torchaudio=0.10.2

Current channels:

  - https://repo.anaconda.com/pkgs/main
  - https://repo.anaconda.com/pkgs/r
  - https://conda.anaconda.org/conda-forge

To search for alternate channels that may provide the conda package you're
looking for, navigate to

    https://anaconda.org

and use the search bar at the top of the page.


(base) root@f9e6a6da20d5:/app# conda activate datasci
python /app/project/test_imports.py; tmux wait -S done

EnvironmentNameNotFound: Could not find conda environment: datasci
You can list all discoverable environments with `conda info --envs`.


(base) root@f9e6a6da20d5:/app# python /app/project/test_imports.py; tmux wait -S done
Testing imports for all required packages...
Testing numpy...
Traceback (most recent call last):
  File "/app/project/test_imports.py", line 44, in <module>
    test_environment()
  File "/app/project/test_imports.py", line 12, in test_environment
    import numpy
ModuleNotFoundError: No module named 'numpy'
(base) root@f9e6a6da20d5:/app# echo "name: datasci
> channels:
>   - defaults
>   - conda-forge
> dependencies:
>   - python=3.8
>   - numpy=1.21.5
>   - scipy=1.7.1
>   - tensorflow=2.7.0
>   - pytorch=1.10.2
>   - torchvision=0.11.3
>   - torchaudio" > /app/project/environment.yml
(base) root@f9e6a6da20d5:/app# conda env create -f /app/project/environment.yml; tmux wait -S done
Channels:
 - defaults
 - conda-forge
Platform: linux-64
Collecting package metadata (repodata.json): done
Solving environment: failed

LibMambaUnsatisfiableError: Encountered problems while solving:
  - nothing provides __cuda needed by tensorflow-2.7.0-cuda102py310hcf4adbc_0

Could not solve for environment specs
The following packages are incompatible
├─ tensorflow =2.7.0 * is installable with the potential options
│  ├─ tensorflow 2.7.0 would require
│  │  └─ tensorflow-base [==2.7.0 cpu_py310h8d3bea7_0|==2.7.0 cpu_py37h8697747_0|==2.7.0 cpu_py38h48ebf30_0|==2.7.0 cpu_py39hf4995fd_0], which requires
│  │     └─ icu >=69.1,<70.0a0 *, which can be installed;
│  └─ tensorflow 2.7.0 would require
│     └─ __cuda =* *, which is missing on the system;
└─ torchaudio =* * is not installable because there are no viable options
   ├─ torchaudio 2.5.1 would require
   │  └─ __cuda =* *, which is missing on the system;
   ├─ torchaudio 2.5.1 would require
   │  └─ ffmpeg >=6.1.1,<7.0a0 * but there are no viable options
   │     ├─ ffmpeg [6.1.1|6.1.2] would require
   │     │  └─ libxml2 [>=2.12.3,<2.14.0a0 *|>=2.12.4,<2.14.0a0 *|...|>=2.13.5,<2.14.0a0 *] but there are no viable options
   │     │     ├─ libxml2 [2.10.4|2.13.1|2.13.5|2.13.7|2.13.8] would require
   │     │     │  └─ icu >=73.1,<74.0a0 *, which conflicts with any installable versions previously reported;
   │     │     ├─ libxml2 [2.12.3|2.12.4|2.12.5|2.12.6|2.12.7] would require
   │     │     │  └─ icu >=73.2,<74.0a0 *, which conflicts with any installable versions previously reported;
   │     │     ├─ libxml2 [2.12.7|2.13.3|...|2.13.8] would require
   │     │     │  └─ icu >=75.1,<76.0a0 *, which conflicts with any installable versions previously reported;
   │     │     └─ libxml2 [2.13.3|2.13.4|...|2.13.8] would require
   │     │        └─ icu <0.0a0 *, which conflicts with any installable versions previously reported;
   │     └─ ffmpeg 6.1.1 would require
   │        └─ libxml2 >=2.10.4,<2.11.0a0 * but there are no viable options
   │           ├─ libxml2 2.10.4 would require
   │           │  └─ icu >=58.2,<59.0a0 *, which conflicts with any installable versions previously reported;
   │           ├─ libxml2 [2.10.4|2.13.1|2.13.5|2.13.7|2.13.8], which cannot be installed (as previously explained);
   │           └─ libxml2 2.10.4 would require
   │              └─ icu >=72.1,<73.0a0 *, which conflicts with any installable versions previously reported;
   └─ torchaudio [2.4.1|2.5.1|2.6.0|2.7.0|2.7.1] would require
      └─ kaldi >=5.5.1112,<5.5.1113.0a0 * but there are no viable options
         ├─ kaldi 5.5.1112 would require
         │  └─ icu >=73.2,<74.0a0 *, which conflicts with any installable versions previously reported;
         ├─ kaldi 5.5.1112 would require
         │  └─ icu >=75.1,<76.0a0 *, which conflicts with any installable versions previously reported;
         ├─ kaldi 5.5.1112 would require
         │  └─ __cuda >=11.8 *, which is missing on the system;
         ├─ kaldi 5.5.1112 would require
         │  └─ __cuda >=12.0 *, which is missing on the system;
         └─ kaldi 5.5.1112 would require
            └─ __cuda >=12.6 *, which is missing on the system.

(base) root@f9e6a6da20d5:/app# conda activate datasci
python /app/project/test_imports.py; tmux wait -S done

EnvironmentNameNotFound: Could not find conda environment: datasci
You can list all discoverable environments with `conda info --envs`.


(base) root@f9e6a6da20d5:/app# python /app/project/test_imports.py; tmux wait -S done
Testing imports for all required packages...
Testing numpy...
Traceback (most recent call last):
  File "/app/project/test_imports.py", line 44, in <module>
    test_environment()
  File "/app/project/test_imports.py", line 12, in test_environment
    import numpy
ModuleNotFoundError: No module named 'numpy'
(base) root@f9e6a6da20d5:/app# echo "name: datasci
> channels:
>   - defaults
>   - conda-forge
> dependencies:
>   - python=3.8
>   - numpy
>   - scipy
>   - tensorflow=2.7.0
>   - pytorch=1.10.2
>   - torchvision
>   - torchaudio" > /app/project/environment.yml
(base) root@f9e6a6da20d5:/app# conda env create -f /app/project/environment.yml; tmux wait -S done
Channels:
 - defaults
 - conda-forge
Platform: linux-64
Collecting package metadata (repodata.json): done
Solving environment: failed

LibMambaUnsatisfiableError: Encountered problems while solving:
  - nothing provides __cuda needed by tensorflow-2.7.0-cuda102py310hcf4adbc_0

Could not solve for environment specs
The following packages are incompatible
├─ tensorflow =2.7.0 * is installable with the potential options
│  ├─ tensorflow 2.7.0 would require
│  │  └─ tensorflow-base [==2.7.0 cpu_py310h8d3bea7_0|==2.7.0 cpu_py37h8697747_0|==2.7.0 cpu_py38h48ebf30_0|==2.7.0 cpu_py39hf4995fd_0], which requires
│  │     └─ icu >=69.1,<70.0a0 *, which can be installed;
│  └─ tensorflow 2.7.0 would require
│     └─ __cuda =* *, which is missing on the system;
└─ torchaudio =* * is not installable because there are no viable options
   ├─ torchaudio 2.5.1 would require
   │  └─ __cuda =* *, which is missing on the system;
   ├─ torchaudio 2.5.1 would require
   │  └─ ffmpeg >=6.1.1,<7.0a0 * but there are no viable options
   │     ├─ ffmpeg [6.1.1|6.1.2] would require
   │     │  └─ libxml2 [>=2.12.3,<2.14.0a0 *|>=2.12.4,<2.14.0a0 *|...|>=2.13.5,<2.14.0a0 *] but there are no viable options
   │     │     ├─ libxml2 [2.10.4|2.13.1|2.13.5|2.13.7|2.13.8] would require
   │     │     │  └─ icu >=73.1,<74.0a0 *, which conflicts with any installable versions previously reported;
   │     │     ├─ libxml2 [2.12.3|2.12.4|2.12.5|2.12.6|2.12.7] would require
   │     │     │  └─ icu >=73.2,<74.0a0 *, which conflicts with any installable versions previously reported;
   │     │     ├─ libxml2 [2.12.7|2.13.3|...|2.13.8] would require
   │     │     │  └─ icu >=75.1,<76.0a0 *, which conflicts with any installable versions previously reported;
   │     │     └─ libxml2 [2.13.3|2.13.4|...|2.13.8] would require
   │     │        └─ icu <0.0a0 *, which conflicts with any installable versions previously reported;
   │     └─ ffmpeg 6.1.1 would require
   │        └─ libxml2 >=2.10.4,<2.11.0a0 * but there are no viable options
   │           ├─ libxml2 2.10.4 would require
   │           │  └─ icu >=58.2,<59.0a0 *, which conflicts with any installable versions previously reported;
   │           ├─ libxml2 [2.10.4|2.13.1|2.13.5|2.13.7|2.13.8], which cannot be installed (as previously explained);
   │           └─ libxml2 2.10.4 would require
   │              └─ icu >=72.1,<73.0a0 *, which conflicts with any installable versions previously reported;
   └─ torchaudio [2.4.1|2.5.1|2.6.0|2.7.0|2.7.1] would require
      └─ kaldi >=5.5.1112,<5.5.1113.0a0 * but there are no viable options
         ├─ kaldi 5.5.1112 would require
         │  └─ icu >=73.2,<74.0a0 *, which conflicts with any installable versions previously reported;
         ├─ kaldi 5.5.1112 would require
         │  └─ icu >=75.1,<76.0a0 *, which conflicts with any installable versions previously reported;
         ├─ kaldi 5.5.1112 would require
         │  └─ __cuda >=11.8 *, which is missing on the system;
         ├─ kaldi 5.5.1112 would require
         │  └─ __cuda >=12.0 *, which is missing on the system;
         └─ kaldi 5.5.1112 would require
            └─ __cuda >=12.6 *, which is missing on the system.

(base) root@f9e6a6da20d5:/app# conda activate datasci
python /app/project/test_imports.py; tmux wait -S done

EnvironmentNameNotFound: Could not find conda environment: datasci
You can list all discoverable environments with `conda info --envs`.


(base) root@f9e6a6da20d5:/app# python /app/project/test_imports.py; tmux wait -S done
Testing imports for all required packages...
Testing numpy...
Traceback (most recent call last):
  File "/app/project/test_imports.py", line 44, in <module>
    test_environment()
  File "/app/project/test_imports.py", line 12, in test_environment
    import numpy
ModuleNotFoundError: No module named 'numpy'
(base) root@f9e6a6da20d5:/app# echo "name: datasci
> channels:
>   - defaults
>   - conda-forge
> dependencies:
>   - python=3.8
>   - numpy
>   - scipy
>   - tensorflow
>   - pytorch
>   - torchvision
>   - torchaudio" > /app/project/environment.yml
(base) root@f9e6a6da20d5:/app# conda env create -f /app/project/environment.yml; tmux wait -S done
Channels:
 - defaults
 - conda-forge
Platform: linux-64
Collecting package metadata (repodata.json): done
Solving environment: - echo "name: datasci
channels:
  - defaults
  - conda-forge
dependencies:
  - python=3.8
  - numpy
  - scipy
  - tensorflow=2.7.0
  - pytorch=1.10.2
  - torchvision" > /app/project/environment.yml
conda env create -f /app/project/environment.yml; tmux wait -S done
| echo "name: datasci
channels:
  - defaults
  - conda-forge
dependencies:
  - python=3.8
  - numpy
  - scipy
  - tensorflow=2.6.0
  - pytorch=1.9.1
  - torchvision" > /app/project/environment.yml
conda env create -f /app/project/environment.yml; tmux wait -S done
failed

LibMambaUnsatisfiableError: Encountered problems while solving:
  - nothing provides __cuda needed by torchaudio-2.5.1-cuda124py310hf5dacad_100

Could not solve for environment specs
The following packages are incompatible
├─ python =3.8 * is installable with the potential options
│  ├─ python [3.8.0|3.8.1|...|3.8.8], which can be installed;
│  ├─ python [3.8.10|3.8.12|...|3.8.8] would require
│  │  └─ python_abi =3.8 *_cp38, which can be installed;
│  └─ python [3.8.0|3.8.1] would require
│     └─ python_abi =* *_cp38, which can be installed;
└─ torchaudio =* * is not installable because there are no viable options
   ├─ torchaudio 2.5.1 would require
   │  └─ __cuda =* *, which is missing on the system;
   ├─ torchaudio 2.5.1 would require
   │  └─ python >=3.10,<3.11.0a0 *, which conflicts with any installable versions previously reported;
   ├─ torchaudio 2.5.1 would require
   │  └─ python >=3.11,<3.12.0a0 *, which conflicts with any installable versions previously reported;
   ├─ torchaudio 2.5.1 would require
   │  └─ python >=3.12,<3.13.0a0 *, which conflicts with any installable versions previously reported;
   ├─ torchaudio [2.5.1|2.7.1] would require
   │  └─ python_abi =3.13 *_cp313 but there are no viable options
   │     ├─ python_abi 3.13 would require
   │     │  └─ python =3.13 *_cp313, which conflicts with any installable versions previously reported;
   │     └─ python_abi 3.13 would require
   │        └─ python =3.13 *_cpython, which conflicts with any installable versions previously reported;
   ├─ torchaudio 2.5.1 would require
   │  └─ python >=3.9,<3.10.0a0 *, which conflicts with any installable versions previously reported;
   ├─ torchaudio [2.4.1|2.5.1|2.6.0|2.7.0|2.7.1] would require
   │  ├─ python =3.10 *_cpython, which conflicts with any installable versions previously reported;
   │  └─ python_abi =3.10 *_cp310 but there are no viable options
   │     ├─ python_abi 3.10 would require
   │     │  └─ python =3.10 *_cpython, which conflicts with any installable versions previously reported;
   │     └─ python_abi 3.10 would require
   │        └─ python =3.10 *, which conflicts with any installable versions previously reported;
   ├─ torchaudio [2.4.1|2.5.1|2.6.0|2.7.0|2.7.1] would require
   │  ├─ python =3.11 *_cpython, which conflicts with any installable versions previously reported;
   │  └─ python_abi =3.11 *_cp311 but there are no viable options
   │     ├─ python_abi 3.11 would require
   │     │  └─ python =3.11 *_cpython, which conflicts with any installable versions previously reported;
   │     └─ python_abi 3.11 would require
   │        └─ python =3.11 *, which conflicts with any installable versions previously reported;
   ├─ torchaudio [2.4.1|2.5.1|2.6.0|2.7.0|2.7.1] would require
   │  └─ python_abi =3.12 *_cp312, which requires
   │     └─ python =3.12 *_cpython, which conflicts with any installable versions previously reported;
   └─ torchaudio [2.4.1|2.5.1] would require
      ├─ python =3.9 *_cpython, which conflicts with any installable versions previously reported;
      └─ python_abi =3.9 *_cp39 but there are no viable options
         ├─ python_abi 3.9 would require
         │  └─ python =3.9 *_cpython, which conflicts with any installable versions previously reported;
         └─ python_abi 3.9 conflicts with any installable versions previously reported.

(base) root@f9e6a6da20d5:/app# echo "name: datasci
> channels:
>   - defaults
>   - conda-forge
> dependencies:
>   - python=3.8
>   - numpy
>   - scipy
>   - tensorflow=2.7.0
>   - pytorch=1.10.2
>   - torchvision" > /app/project/environment.yml
(base) root@f9e6a6da20d5:/app# conda env create -f /app/project/environment.yml; tmux wait -S done
conda activate datasci
python /app/project/test_imports.py; tmux wait -S done
Channels:
 - defaults
 - conda-forge
Platform: linux-64
Collecting package metadata (repodata.json): done
Solving environment: done


==> WARNING: A newer version of conda exists. <==
    current version: 25.1.1
    latest version: 25.5.1

Please update conda by running

    $ conda update -n base -c defaults conda



Downloading and Extracting Packages:

Preparing transaction: done
Verifying transaction: \ conda activate datasci
| python /app/project/test_imports.py; tmux wait -S done
done
Executing transaction: - By downloading and using the CUDA Toolkit conda packages, you accept the terms and conditions of the CUDA End User License Agreement (E
ULA): https://docs.nvidia.com/cuda/eula/index.html

done
#
# To activate this environment, use
#
#     $ conda activate datasci
#
# To deactivate an active environment, use
#
#     $ conda deactivate

(base) root@f9e6a6da20d5:/app# echo "name: datasci
> channels:
>   - defaults
>   - conda-forge
> dependencies:
>   - python=3.8
>   - numpy
>   - scipy
>   - tensorflow=2.6.0
>   - pytorch=1.9.1
>   - torchvision" > /app/project/environment.yml
(base) root@f9e6a6da20d5:/app# conda env create -f /app/project/environment.yml; tmux wait -S done

CondaValueError: prefix already exists: /opt/conda/envs/datasci

(base) root@f9e6a6da20d5:/app# conda activate datasci
(datasci) root@f9e6a6da20d5:/app# python /app/project/test_imports.py; tmux wait -S done
Testing imports for all required packages...
Testing numpy...
conda activate datasci
python /app/project/test_imports.py; tmux wait -S done
NumPy version: 1.24.3
Testing scipy...
SciPy version: 1.10.1
Testing pandas...
Traceback (most recent call last):
  File "/app/project/test_imports.py", line 44, in <module>
    test_environment()
  File "/app/project/test_imports.py", line 20, in test_environment
    import pandas
ModuleNotFoundError: No module named 'pandas'
(datasci) root@f9e6a6da20d5:/app# conda activate datasci
(datasci) root@f9e6a6da20d5:/app# python /app/project/test_imports.py; tmux wait -S done
Testing imports for all required packages...
Testing numpy...
NumPy version: 1.24.3
Testing scipy...
SciPy version: 1.10.1
Testing pandas...
Traceback (most recent call last):
  File "/app/project/test_imports.py", line 44, in <module>
    test_environment()
  File "/app/project/test_imports.py", line 20, in test_environment
    import pandas
ModuleNotFoundError: No module named 'pandas'
(datasci) root@f9e6a6da20d5:/app# conda activate datasci
(datasci) root@f9e6a6da20d5:/app# python /app/project/test_imports.py; tmux wait -S done
Testing imports for all required packages...
Testing numpy...
NumPy version: 1.24.3
Testing scipy...
SciPy version: 1.10.1
Testing pandas...
Traceback (most recent call last):
  File "/app/project/test_imports.py", line 44, in <module>
    test_environment()
  File "/app/project/test_imports.py", line 20, in test_environment
    import pandas
ModuleNotFoundError: No module named 'pandas'
(datasci) root@f9e6a6da20d5:/app# echo "name: datasci
> channels:
>   - defaults
>   - conda-forge
> dependencies:
>   - python=3.8
>   - numpy
>   - scipy
>   - tensorflow=2.6.0
>   - pytorch=1.9.1
>   - torchvision
>   - pandas" > /app/project/environment.yml
(datasci) root@f9e6a6da20d5:/app# conda env update -f /app/project/environment.yml; tmux wait -S done
python /app/project/test_imports.py; tmux wait -S done
Channels:
 - defaults
 - conda-forge
Platform: linux-64
Collecting package metadata (repodata.json): done
Solving environment: failed

LibMambaUnsatisfiableError: Encountered problems while solving:
  - package tensorflow-base-2.6.0-py36h312d151_0 requires python >=3.6,<3.7.0a0, but none of the providers can be installed

Could not solve for environment specs
The following packages are incompatible
├─ python =3.8 * is installable with the potential options
│  ├─ python [3.8.0|3.8.1|...|3.8.8], which can be installed;
│  ├─ python [3.8.10|3.8.12|...|3.8.8] would require
│  │  └─ python_abi =3.8 *_cp38, which can be installed;
│  └─ python [3.8.0|3.8.1] would require
│     └─ python_abi =* *_cp38, which can be installed;
├─ pytorch =1.9.1 * is installable with the potential options
│  ├─ pytorch 1.9.1 would require
│  │  └─ libprotobuf >=3.18.0,<3.19.0a0 *, which can be installed;
│  ├─ pytorch 1.9.1 would require
│  │  └─ libprotobuf >=3.18.1,<3.19.0a0 *, which can be installed;
│  ├─ pytorch 1.9.1 would require
│  │  ├─ python >=3.6,<3.7.0a0 *, which conflicts with any installable versions previously reported;
│  │  └─ python_abi =3.6 *_cp36m, which conflicts with any installable versions previously reported;
│  ├─ pytorch 1.9.1 would require
│  │  ├─ python >=3.7,<3.8.0a0 *, which conflicts with any installable versions previously reported;
│  │  └─ python_abi =3.7 *_cp37m but there are no viable options
│  │     ├─ python_abi 3.7 would require
│  │     │  └─ python =3.7 *_cpython, which conflicts with any installable versions previously reported;
│  │     └─ python_abi 3.7 conflicts with any installable versions previously reported;
│  └─ pytorch 1.9.1 would require
│     ├─ python >=3.9,<3.10.0a0 *, which conflicts with any installable versions previously reported;
│     └─ python_abi =3.9 *_cp39 but there are no viable options
│        ├─ python_abi 3.9 would require
│        │  └─ python =3.9 *_cpython, which conflicts with any installable versions previously reported;
│        └─ python_abi 3.9 conflicts with any installable versions previously reported;
└─ tensorflow =2.6.0 * is not installable because there are no viable options
   ├─ tensorflow 2.6.0 would require
   │  └─ tensorflow-base ==2.6.0 py36h312d151_0, which requires
   │     ├─ python >=3.6,<3.7.0a0 *, which conflicts with any installable versions previously reported;
   │     └─ python_abi =3.6 *_cp36m, which conflicts with any installable versions previously reported;
   ├─ tensorflow 2.6.0 would require
   │  └─ tensorflow-base [==2.6.0 eigen_py37ha9cc040_0|==2.6.0 mkl_py37h3d85931_0], which requires
   │     └─ python >=3.7,<3.8.0a0 *, which conflicts with any installable versions previously reported;
   ├─ tensorflow 2.6.0 would require
   │  └─ tensorflow-base [==2.6.0 eigen_py38ha9cc040_0|==2.6.0 mkl_py38h3d85931_0], which requires
   │     └─ libprotobuf >=3.14.0,<3.15.0a0 *, which conflicts with any installable versions previously reported;
   ├─ tensorflow 2.6.0 would require
   │  └─ tensorflow-base [==2.6.0 eigen_py39ha9cc040_0|==2.6.0 mkl_py39h3d85931_0], which requires
   │     └─ python >=3.9,<3.10.0a0 *, which conflicts with any installable versions previously reported;
   ├─ tensorflow 2.6.0 would require
   │  └─ tensorflow-base [==2.6.0 cpu_py37hc5ef7b8_2|==2.6.0 cpu_py38h4611ba2_2|...|==2.6.0 py39he745eb5_1], which requires
   │     └─ libprotobuf >=3.16.0,<3.17.0a0 *, which conflicts with any installable versions previously reported;
   ├─ tensorflow 2.6.0 would require
   │  ├─ python_abi =3.7 *_cp37m but there are no viable options
   │  │  ├─ python_abi 3.7, which cannot be installed (as previously explained);
   │  │  └─ python_abi 3.7 conflicts with any installable versions previously reported;
   │  └─ tensorflow-base ==2.6.0 py37he2fe834_0, which cannot be installed (as previously explained);
   ├─ tensorflow 2.6.0 would require
   │  └─ tensorflow-base ==2.6.0 py38h83f5f1d_0, which requires
   │     ├─ grpc-cpp >=1.37.1,<1.38.0a0 * but there are no viable options
   │     │  ├─ grpc-cpp 1.37.1 would require
   │     │  │  └─ libprotobuf >=3.15.8,<3.16.0a0 *, which conflicts with any installable versions previously reported;
   │     │  ├─ grpc-cpp 1.37.1 would require
   │     │  │  └─ libprotobuf >=3.14.0,<3.15.0a0 *, which conflicts with any installable versions previously reported;
   │     │  └─ grpc-cpp 1.37.1 would require
   │     │     └─ libprotobuf >=3.16.0,<3.17.0a0 *, which conflicts with any installable versions previously reported;
   │     └─ libprotobuf >=3.15.8,<3.16.0a0 *, which conflicts with any installable versions previously reported;
   └─ tensorflow 2.6.0 would require
      ├─ python_abi =3.9 *_cp39 but there are no viable options
      │  ├─ python_abi 3.9, which cannot be installed (as previously explained);
      │  └─ python_abi 3.9 conflicts with any installable versions previously reported;
      └─ tensorflow-base ==2.6.0 py39h23a8cbf_0, which cannot be installed (as previously explained).

(datasci) root@f9e6a6da20d5:/app# python /app/project/test_imports.py; tmux wait -S done
Testing imports for all required packages...
Testing numpy...
NumPy version: 1.24.3
Testing scipy...
SciPy version: 1.10.1
Testing pandas...
Traceback (most recent call last):
  File "/app/project/test_imports.py", line 44, in <module>
    test_environment()
  File "/app/project/test_imports.py", line 20, in test_environment
    import pandas
ModuleNotFoundError: No module named 'pandas'
(datasci) root@f9e6a6da20d5:/app# conda remove --name datasci --all; tmux wait -S done
echo "name: datasci
channels:
  - defaults
  - conda-forge
dependencies:
  - python=3.8
  - numpy
  - scipy
  - tensorflow=2.6.0
  - pytorch=1.9.1
  - torchvision
  - pandas" > /app/project/environment.yml
conda env create -f /app/project/environment.yml; tmux wait -S done

CondaEnvironmentError: Cannot remove current environment. Deactivate and run conda remove again

(datasci) root@f9e6a6da20d5:/app# echo "name: datasci
> channels:
>   - defaults
>   - conda-forge
> dependencies:
>   - python=3.8
>   - numpy
>   - scipy
>   - tensorflow=2.6.0
>   - pytorch=1.9.1
>   - torchvision
>   - pandas" > /app/project/environment.yml
(datasci) root@f9e6a6da20d5:/app# conda env create -f /app/project/environment.yml; tmux wait -S done
conda activate datasci
python /app/project/test_imports.py; tmux wait -S done

CondaValueError: prefix already exists: /opt/conda/envs/datasci

(datasci) root@f9e6a6da20d5:/app# conda activate datasci
(datasci) root@f9e6a6da20d5:/app# python /app/project/test_imports.py; tmux wait -S done
Testing imports for all required packages...
Testing numpy...
NumPy version: 1.24.3
Testing scipy...
SciPy version: 1.10.1
Testing pandas...
Traceback (most recent call last):
  File "/app/project/test_imports.py", line 44, in <module>
    test_environment()
  File "/app/project/test_imports.py", line 20, in test_environment
    import pandas
ModuleNotFoundError: No module named 'pandas'
(datasci) root@f9e6a6da20d5:/app# conda deactivate
conda remove --name datasci --all; tmux wait -S done
conda env create -f /app/project/environment.yml; tmux wait -S done
(base) root@f9e6a6da20d5:/app# conda remove --name datasci --all; tmux wait -S done

Remove all packages in environment /opt/conda/envs/datasci:


## Package Plan ##

  environment location: /opt/conda/envs/datasci


The following packages will be REMOVED:

  _libgcc_mutex-0.1-main
  _openmp_mutex-5.1-1_gnu
  abseil-cpp-20210324.2-h2531618_0
  absl-py-2.1.0-py38h06a4308_0
  aiohappyeyeballs-2.4.0-py38h06a4308_0
  aiohttp-3.10.5-py38h5eee18b_0
  aiosignal-1.2.0-pyhd3eb1b0_0
  astunparse-1.6.3-py_0
  async-timeout-4.0.3-py38h06a4308_0
  attrs-24.2.0-py38h06a4308_0
  blas-1.0-mkl
  blinker-1.6.2-py38h06a4308_0
  brotli-python-1.0.9-py38h6a678d5_8
  c-ares-1.19.1-h5eee18b_0
  ca-certificates-2025.2.25-h06a4308_0
  cachetools-5.3.3-py38h06a4308_0
  certifi-2024.8.30-py38h06a4308_0
  cffi-1.17.1-py38h1fdaa30_0
  charset-normalizer-3.3.2-pyhd3eb1b0_0
  click-8.1.7-py38h06a4308_0
  cryptography-41.0.3-py38h130f0dd_0
  cudatoolkit-11.8.0-h6a678d5_0
  freetype-2.13.3-h4a9f257_0
  frozenlist-1.4.0-py38h5eee18b_0
  future-0.18.3-py38h06a4308_0
  gast-0.4.0-pyhd3eb1b0_0
  giflib-5.2.2-h5eee18b_0
  google-auth-2.29.0-py38h06a4308_0
  google-auth-oauthlib-0.4.1-py_2
  google-pasta-0.2.0-pyhd3eb1b0_0
  grpc-cpp-1.42.0-ha1441d3_1
  grpcio-1.42.0-py38hce63b2e_0
  h5py-3.11.0-py38hbe37b52_0
  hdf5-1.12.1-h70be1eb_2
  icu-69.1-h9c3ff4c_0
  idna-3.7-py38h06a4308_0
  importlib-metadata-7.0.1-py38h06a4308_0
  intel-openmp-2021.4.0-h06a4308_3561
  jpeg-9e-h5eee18b_3
  keras-2.7.0-pyhd8ed1ab_0
  keras-preprocessing-1.1.2-pyhd3eb1b0_0
  krb5-1.20.1-h568e23c_1
  lcms2-2.16-hb9589c4_0
  ld_impl_linux-64-2.40-h12ee557_0
  lerc-4.0.0-h6a678d5_0
  libcurl-8.2.1-h91b91d3_0
  libdeflate-1.22-h5eee18b_0
  libedit-3.1.20230828-h5eee18b_0
  libev-4.33-h7f8727e_1
  libffi-3.4.4-h6a678d5_1
  libgcc-15.1.0-h767d61c_3
  libgcc-ng-15.1.0-h69a702a_3
  libgfortran-ng-11.2.0-h00389a5_1
  libgfortran5-11.2.0-h1234567_1
  libgomp-15.1.0-h767d61c_3
  libnghttp2-1.52.0-ha637b67_1
  libpng-1.6.39-h5eee18b_0
  libprotobuf-3.19.6-he621ea3_0
  libssh2-1.10.0-h37d81fd_2
  libstdcxx-ng-11.2.0-h1234567_1
  libtiff-4.5.1-hffd6297_1
  libwebp-base-1.3.2-h5eee18b_1
  libxcb-1.17.0-h9b100fa_0
  libzlib-1.2.13-h4ab18f5_6
  lz4-c-1.9.4-h6a678d5_1
  markdown-3.4.1-py38h06a4308_0
  markupsafe-2.1.3-py38h5eee18b_0
  mkl-2021.4.0-h06a4308_640
  mkl-service-2.4.0-py38h7f8727e_0
  mkl_fft-1.3.1-py38hd3c417c_0
  mkl_random-1.2.2-py38h51133e4_0
  multidict-6.0.4-py38h5eee18b_0
  ncurses-6.4-h6a678d5_0
  ninja-1.12.1-h06a4308_0
  ninja-base-1.12.1-hdb19cb5_0
  numpy-1.24.3-py38h14f4228_0
  numpy-base-1.24.3-py38h31eccc5_0
  oauthlib-3.2.2-py38h06a4308_0
  openjpeg-2.5.2-he7f1fd0_0
  openssl-1.1.1w-h7f8727e_0
  opt_einsum-3.3.0-pyhd3eb1b0_1
  packaging-24.1-py38h06a4308_0
  pillow-10.4.0-py38h5eee18b_0
  pip-24.2-py38h06a4308_0
  platformdirs-3.10.0-py38h06a4308_0
  pooch-1.7.0-py38h06a4308_0
  protobuf-3.19.6-py38h6a678d5_0
  pthread-stubs-0.3-h0ce48e5_1
  pyasn1-0.4.8-pyhd3eb1b0_0
  pyasn1-modules-0.2.8-py_0
  pycparser-2.21-pyhd3eb1b0_0
  pyjwt-2.8.0-py38h06a4308_0
  pyopenssl-23.2.0-py38h06a4308_0
  pysocks-1.7.1-py38h06a4308_0
  python-3.8.18-h7a1cb2a_0
  python-flatbuffers-2.0-pyhd3eb1b0_0
  python_abi-3.8-2_cp38
  pytorch-1.10.2-cpu_py38hfa7516b_0
  re2-2021.11.01-h9c3ff4c_0
  readline-8.2-h5eee18b_0
  requests-2.32.3-py38h06a4308_0
  requests-oauthlib-2.0.0-py38h06a4308_0
  rsa-4.7.2-pyhd3eb1b0_1
  scipy-1.10.1-py38h14f4228_0
  setuptools-75.1.0-py38h06a4308_0
  six-1.16.0-pyhd3eb1b0_1
  snappy-1.1.10-h6a678d5_1
  sqlite-3.45.3-h5eee18b_0
  tensorboard-2.6.0-py_1
  tensorboard-data-server-0.6.1-py38h52d8a92_0
  tensorboard-plugin-wit-1.8.1-py38h06a4308_0
  tensorflow-2.7.0-cpu_py38h66f0ec1_0
  tensorflow-base-2.7.0-cpu_py38h48ebf30_0
  tensorflow-estimator-2.7.0-cpu_py38h7d34d82_0
  termcolor-2.1.0-py38h06a4308_0
  tk-8.6.14-h993c535_1
  torchvision-0.15.2-cuda118py38h196c800_0
  typing-extensions-4.11.0-py38h06a4308_0
  typing_extensions-4.11.0-py38h06a4308_0
  urllib3-2.2.3-py38h06a4308_0
  werkzeug-3.0.3-py38h06a4308_0
  wheel-0.44.0-py38h06a4308_0
  wrapt-1.14.1-py38h5eee18b_0
  xorg-libx11-1.8.12-h9b100fa_1
  xorg-libxau-1.0.12-h9b100fa_0
  xorg-libxdmcp-1.1.5-h9b100fa_0
  xorg-xorgproto-2024.1-h5eee18b_1
  xz-5.6.4-h5eee18b_1
  yarl-1.11.0-py38h5eee18b_0
  zipp-3.20.2-py38h06a4308_0
  zlib-1.2.13-h4ab18f5_6
  zstd-1.5.6-hc292b87_0


Proceed ([y]/n)? Invalid choice: conda env create -f /app/project/environment.yml; tmux wait -s done
Proceed ([y]/n)?
