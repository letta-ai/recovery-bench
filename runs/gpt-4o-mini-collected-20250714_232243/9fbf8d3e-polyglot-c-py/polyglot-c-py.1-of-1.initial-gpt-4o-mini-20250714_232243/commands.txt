['asciinema rec --stdin /logs/agent.cast', 'Enter']
['clear', 'Enter']
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    int n = atoi(argv[1]);\\n    printf("%d\\n", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    int n = atoi(argv[1]);\\n    printf("%d\\n", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    int n = atoi(argv[1]);\\n    printf("%d\\n", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    int n = atoi(argv[1]);\\n    printf("%d\\n", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    int n = atoi(argv[1]);\\n    printf("%d\\n", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    int n = atoi(argv[1]);\\n    printf("%d\\n", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf("%d\\n", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'rm -f /app/main.py.c\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'rm -f /app/main.py.c\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'rm -f /app/main.py.c\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'rm -f /app/main.py.c\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'rm -f /app/main.py.c\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'rm -f /app/main.py.c\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'rm -f /app/main.py.c\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'rm -f /app/main.py.c\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'rm -f /app/main.py.c\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'rm -f /app/main.py.c\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'rm -f /app/main.py.c\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'rm -f /app/main.py.c\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'rm -f /app/main.py.c\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'rm -f /app/main.py.c\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'rm -f /app/main.py.c\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'rm -f /app/main.py.c\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'rm -f /app/main.py.c\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'rm -f /app/main.py.c\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'rm -f /app/main.py.c\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'rm -f /app/main.py.c\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'rm -f /app/main.py.c\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'rm -f /app/main.py.c\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'rm -f /app/main.py.c\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'rm -f /app/main.py.c\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'rm -f /app/main.py.c\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'rm -f /app/main.py.c\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
'rm -f /app/main.py.c\n'
'echo "def fibonacci(n):\\n    if n <= 1: return n\\n    return fibonacci(n-1) + fibonacci(n-2)\\n\\nimport sys\\nif __name__ == \'__main__\':\\n    n = int(sys.argv[1])\\n    print(fibonacci(n))\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\nint fibonacci(int n) {\\n    if (n <= 1) return n;\\n    return fibonacci(n-1) + fibonacci(n-2);\\n}\\n\\nint main(int argc, char *argv[]) {\\n    if (argc < 2) return 1;\\n    int n = atoi(argv[1]);\\n    printf(\\"%d\\n\\", fibonacci(n));\\n    return 0;\\n}" > /app/main.py.c\n'
'python3 /app/main.py.c 5\n'
'gcc /app/main.py.c -o /app/fib && /app/fib 5\n'
['asciinema rec --stdin /logs/tests.cast', 'Enter']
['clear', 'Enter']
['bash ', '/tests/run-tests.sh', 'Enter']
['C-d']
['C-d']
