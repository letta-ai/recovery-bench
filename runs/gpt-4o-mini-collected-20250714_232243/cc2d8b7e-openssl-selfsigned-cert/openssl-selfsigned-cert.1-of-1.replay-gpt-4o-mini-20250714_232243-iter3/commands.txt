['asciinema rec --stdin /logs/agent.cast', 'Enter']
['clear', 'Enter']
'mkdir -p /app/ssl\n'
'openssl genrsa -out /app/ssl/server.key 2048\n'
'chmod 600 /app/ssl/server.key\n'
'openssl req -new -x509 -key /app/ssl/server.key -out /app/ssl/server.crt -days 365 -subj "/O=DevOps Team/CN=dev-internal.company.local"\n'
'cat /app/ssl/server.key /app/ssl/server.crt > /app/ssl/server.pem\n'
'openssl x509 -in /app/ssl/server.crt -text -noout > /app/ssl/verification.txt\n'
'echo "Subject: $(openssl x509 -in /app/ssl/server.crt -noout -subject)" >> /app/ssl/verification.txt\n'
'echo "Validity: $(openssl x509 -in /app/ssl/server.crt -noout -dates)" >> /app/ssl/verification.txt\n'
'echo "SHA-256 Fingerprint: $(openssl x509 -in /app/ssl/server.crt -noout -fingerprint -sha256)" >> /app/ssl/verification.txt\n'
'echo "import ssl, subprocess" > /app/check_cert.py\n'
'echo "cert_path = \'/app/ssl/server.crt\'" >> /app/check_cert.py\n'
'echo "try:\\n    ssl.SSLContext().load_verify_locations(cert_path)\\n    print(\'Certificate verification successful\')\\nexcept Exception as e:\\n    print(e)" >> /app/check_cert.py\n'
'ls -l /app/ssl\n'
'openssl genrsa -out /app/ssl/server.key 2048\n'
'chmod 600 /app/ssl/server.key\n'
'openssl req -new -x509 -key /app/ssl/server.key -out /app/ssl/server.crt -days 365 -subj "/O=DevOps Team/CN=dev-internal.company.local"\n'
'cat /app/ssl/server.key /app/ssl/server.crt > /app/ssl/server.pem\n'
'openssl x509 -in /app/ssl/server.crt -text -noout > /app/ssl/verification.txt\n'
'echo "Subject: $(openssl x509 -in /app/ssl/server.crt -noout -subject)" >> /app/ssl/verification.txt\n'
'echo "Validity: $(openssl x509 -in /app/ssl/server.crt -noout -dates)" >> /app/ssl/verification.txt\n'
'echo "SHA-256 Fingerprint: $(openssl x509 -in /app/ssl/server.crt -noout -fingerprint -sha256)" >> /app/ssl/verification.txt\n'
'echo "import ssl, subprocess" > /app/check_cert.py\n'
'echo "cert_path = \'/app/ssl/server.crt\'" >> /app/check_cert.py\n'
'echo "try:\\n    ssl.SSLContext().load_verify_locations(cert_path)\\n    print(\'Certificate verification successful\')\\nexcept Exception as e:\\n    print(e)" >> /app/check_cert.py\n'
'chmod 644 /app/ssl/server.crt\n'
'chmod 644 /app/ssl/server.pem\n'
'ls -l /app/ssl\n'
'openssl x509 -in /app/ssl/server.crt -noout -text\n'
'openssl rsa -in /app/ssl/server.key -check\n'
'cat /app/ssl/server.pem\n'
'cat /app/ssl/verification.txt\n'
'chmod 644 /app/ssl/server.crt\n'
'chmod 644 /app/ssl/server.pem\n'
'ls -l /app/ssl\n'
'openssl x509 -in /app/ssl/server.crt -noout -text\n'
'openssl rsa -in /app/ssl/server.key -check\n'
'cat /app/ssl/server.pem\n'
'cat /app/ssl/verification.txt\n'
'python3 /app/check_cert.py\n'
'echo "import ssl, subprocess" > /app/check_cert.py\n'
'echo "cert_path = \'/app/ssl/server.crt\'" >> /app/check_cert.py\n'
'echo "try:\\n    ssl.SSLContext().load_verify_locations(cert_path)\\n    print(\'Certificate verification successful\')\\nexcept Exception as e:\\n    print(e)" >> /app/check_cert.py\n'
'python3 /app/check_cert.py\n'
'echo "import ssl, subprocess" > /app/check_cert.py\n'
'echo "cert_path = \'/app/ssl/server.crt\'" >> /app/check_cert.py\n'
'echo "try:" >> /app/check_cert.py\n'
'echo "    ssl.SSLContext().load_verify_locations(cert_path)" >> /app/check_cert.py\n'
'echo "    print(\'Certificate verification successful\')" >> /app/check_cert.py\n'
'echo "except Exception as e:" >> /app/check_cert.py\n'
'echo "    print(e)" >> /app/check_cert.py\n'
'python3 /app/check_cert.py\n'
['asciinema rec --stdin /logs/tests.cast', 'Enter']
['clear', 'Enter']
['bash ', '/tests/run-tests.sh', 'Enter']
['C-d']
