root@342c0c844b0e:/app/dclm# grep -rl 'AWS_ACCESS_KEY_ID' . | xargs sed -i 's/[A-Z0-9]*<your-aws-access-key-id>/g'
grep -rl 'HUGGINGFACE_TOKEN' . | xargs sed -i 's/[A-Z0-9]*<your-huggingface-token>/g'
grep -r 'AWS_SECRET_ACCESS_KEY' . | xargs sed -i 's/[A-Z0-9]*<your-aws-secret-access-key>/g'
grep -r 'API_KEY' . | xargs sed -i 's/[A-Z0-9]*<your-api-key>/g'
grep -r 'TOKEN' . | xargs sed -i 's/[A-Z0-9]*<your-token>/g'
git diff; tmux wait -S done
sed: -e expression #1, char 37: unterminated `s' command
root@342c0c844b0e:/app/dclm# grep -rl 'HUGGINGFACE_TOKEN' . | xargs sed -i 's/[A-Z0-9]*<your-huggingface-token>/g'
sed: -e expression #1, char 37: unterminated `s' command
root@342c0c844b0e:/app/dclm# grep -r 'AWS_SECRET_ACCESS_KEY' . | xargs sed -i 's/[A-Z0-9]*<your-aws-secret-access-key>/g'
sed: -e expression #1, char 41: unterminated `s' command
root@342c0c844b0e:/app/dclm# grep -r 'API_KEY' . | xargs sed -i 's/[A-Z0-9]*<your-api-key>/g'
sed: -e expression #1, char 27: unterminated `s' command
root@342c0c844b0e:/app/dclm# grep -r 'TOKEN' . | xargs sed -i 's/[A-Z0-9]*<your-token>/g'
xargs: unmatched double quote; by default quotes are special to xargs unless you use the -0 option
sed: invalid option -- '4'
Usage: sed [OPTION]... {script-only-if-no-other-script} [input-file]...

  -n, --quiet, --silent
                 suppress automatic printing of pattern space
      --debug
                 annotate program execution
  -e script, --expression=script
                 add the script to the commands to be executed
  -f script-file, --file=script-file
                 add the contents of script-file to the commands to be executed
  --follow-symlinks
                 follow symlinks when processing in place
  -i[SUFFIX], --in-place[=SUFFIX]
                 edit files in place (makes backup if SUFFIX supplied)
  -l N, --line-length=N
                 specify the desired line-wrap length for the `l' command
  --posix
                 disable all GNU extensions.
  -E, -r, --regexp-extended
                 use extended regular expressions in the script
                 (for portability use POSIX -E).
  -s, --separate
                 consider files as separate rather than as a single,
                 continuous long stream.
      --sandbox
                 operate in sandbox mode (disable e/r/w commands).
  -u, --unbuffered
                 load minimal amounts of data from the input files and flush
                 the output buffers more often
  -z, --null-data
                 separate lines by NUL characters
      --help     display this help and exit
      --version  output version information and exit

If no -e, --expression, -f, or --file option is given, then the first
non-option argument is taken as the sed script to interpret.  All
remaining arguments are names of input files; if no input files are
specified, then the standard input is read.

GNU sed home page: <https://www.gnu.org/software/sed/>.
General help using GNU software: <https://www.gnu.org/gethelp/>.
grep: write error: Broken pipe
root@342c0c844b0e:/app/dclm# git diff; tmux wait -S done
root@342c0c844b0e:/app/dclm# git diff; tmux wait -S done
root@342c0c844b0e:/app/dclm# grep -rnw '.' -e 'AWS_ACCESS_KEY_ID'; tmux wait -S done
./ray_processing/process.py:122:    os.environ["AWS_ACCESS_KEY_ID"] = "AKIA1234567890123456"
./ray_processing/ray_cluster.yaml:29:    - echo 'export AWS_ACCESS_KEY_ID=AKIA1234567890123456' >> ~/.bashrc
./README.md:220:        - echo 'export AWS_ACCESS_KEY_ID=' >> ~/.bashrc
./README.md:442:As an important note, downloads from the Common Crawl bucket do require having a valid set of AWS account credentials (i.e., `AWS_SECRET_ACCESS_
KEY` and `AWS_ACCESS_KEY_ID`). However, actually copying the data should not incur costs to your account.
./baselines/README.md:195:    - echo 'export AWS_ACCESS_KEY_ID=' >> ~/.bashrc
./tools/eval_expdb.py:92:                    f"AWS_ACCESS_KEY_ID={access_key} AWS_SECRET_ACCESS_KEY={secret_key} aws s3 cp {src} s3://***REMOVED***/tri-tmp/mode
l/{model_name}"
./tools/commoncrawl/ray_config/cluster-west.yaml:32:    - echo 'export AWS_ACCESS_KEY_ID=' >> ~/.bashrc
root@342c0c844b0e:/app/dclm# grep -rnw '.' -e 'HUGGINGFACE_TOKEN'; tmux wait -S done
root@342c0c844b0e:/app/dclm# grep -rnw '.' -e 'AWS_SECRET_ACCESS_KEY'; tmux wait -S done
./ray_processing/process.py:123:    os.environ["AWS_SECRET_ACCESS_KEY"] = "D4w8z9wKN1aVeT3BpQj6kIuN7wH8X0M9KfV5OqzF"
./ray_processing/ray_cluster.yaml:30:    - echo 'export AWS_SECRET_ACCESS_KEY=D4w8z9wKN1aVeT3BpQj6kIuN7wH8X0M9KfV5OqzF' >> ~/.bashrc
./README.md:221:        - echo 'export AWS_SECRET_ACCESS_KEY=' >> ~/.bashrc
./README.md:442:As an important note, downloads from the Common Crawl bucket do require having a valid set of AWS account credentials (i.e., `AWS_SECRET_ACCESS_
KEY` and `AWS_ACCESS_KEY_ID`). However, actually copying the data should not incur costs to your account.
./baselines/README.md:196:    - echo 'export AWS_SECRET_ACCESS_KEY=' >> ~/.bashrc
./tools/eval_expdb.py:92:                    f"AWS_ACCESS_KEY_ID={access_key} AWS_SECRET_ACCESS_KEY={secret_key} aws s3 cp {src} s3://***REMOVED***/tri-tmp/mode
l/{model_name}"
./tools/commoncrawl/ray_config/cluster-west.yaml:33:    - echo 'export AWS_SECRET_ACCESS_KEY=' >> ~/.bashrc
root@342c0c844b0e:/app/dclm# grep -rnw '.' -e 'API_KEY'; tmux wait -S done
root@342c0c844b0e:/app/dclm# grep -rnw '.' -e 'TOKEN'; tmux wait -S done
root@342c0c844b0e:/app/dclm# sed -i 's/AWS_ACCESS_KEY_ID="AKIA[^"]*"/AWS_ACCESS_KEY_ID=<your-aws-access-key-id>/g' ray_processing/process.py
root@342c0c844b0e:/app/dclm# sed -i 's/export AWS_ACCESS_KEY_ID=AKIA[^"]*/export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>/g' ray_processing/ray_cluster.yaml
root@342c0c844b0e:/app/dclm# sed -i 's/export AWS_ACCESS_KEY_ID=/export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>/g' README.md
root@342c0c844b0e:/app/dclm# sed -i 's/AWS_SECRET_ACCESS_KEY="D4w8z9wKN1aVeT3BpQj6kIuN7wH8X0M9KfV5OqzF"/AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>/g' ra
y_processing/process.py
root@342c0c844b0e:/app/dclm# sed -i 's/export AWS_SECRET_ACCESS_KEY=D4w8z9wKN1aVeT3BpQj6kIuN7wH8X0M9KfV5OqzF/export AWS_SECRET_ACCESS_KEY=<your-aws-secret-acces
s-key>/g' ray_processing/ray_cluster.yaml
root@342c0c844b0e:/app/dclm# sed -i 's/export AWS_SECRET_ACCESS_KEY=/export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>/g' README.md
root@342c0c844b0e:/app/dclm# git diff; tmux wait -S done
diff --git a/README.md b/README.md
index 07b7f39..251dac4 100644
--- a/README.md
+++ b/README.md
@@ -217,8 +217,8 @@ Our codebase incudes a `ray`-based data processing engine that is best suited fo
         - bash ~/miniconda.sh -f -b -p /tmp/miniconda3/
         - echo 'export PATH="/tmp/miniconda3/bin/:$PATH"' >> ~/.bashrc
         # Include your AWS CREDS here
-        - echo 'export AWS_ACCESS_KEY_ID=' >> ~/.bashrc
-        - echo 'export AWS_SECRET_ACCESS_KEY=' >> ~/.bashrc
+        - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>' >> ~/.bashrc
+        - echo 'export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>' >> ~/.bashrc
         - pip install --upgrade pip setuptools wheel
         - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp310-cp310-manylinux2014_x86_64.whl"
         - pip install boto3==1.26.90
diff --git a/ray_processing/ray_cluster.yaml b/ray_processing/ray_cluster.yaml
index 29d77ef..c073ee2 100644
--- a/ray_processing/ray_cluster.yaml
+++ b/ray_processing/ray_cluster.yaml
@@ -26,8 +26,8 @@ setup_commands:
     - bash ~/miniconda.sh -f -b -p miniconda3/
     - echo 'export PATH="$HOME/miniconda3/bin/:$PATH"' >> ~/.bashrc
     # if you have AWS CREDS fill them out here
-    - echo 'export AWS_ACCESS_KEY_ID=AKIA1234567890123456' >> ~/.bashrc
-    - echo 'export AWS_SECRET_ACCESS_KEY=D4w8z9wKN1aVeT3BpQj6kIuN7wH8X0M9KfV5OqzF' >> ~/.bashrc
+    - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>
+    - echo 'export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>' >> ~/.bashrc
     - pip install --upgrade pip setuptools wheel
     - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp310-cp310-manylinux2014_x86_64.whl"
     - pip install boto3==1.26.90
root@342c0c844b0e:/app/dclm# sed -i 's/export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>/export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>/g' ray_processing/ray
_cluster.yaml
root@342c0c844b0e:/app/dclm# git diff; tmux wait -S done
diff --git a/README.md b/README.md
index 07b7f39..251dac4 100644
--- a/README.md
+++ b/README.md
@@ -217,8 +217,8 @@ Our codebase incudes a `ray`-based data processing engine that is best suited fo
         - bash ~/miniconda.sh -f -b -p /tmp/miniconda3/
         - echo 'export PATH="/tmp/miniconda3/bin/:$PATH"' >> ~/.bashrc
         # Include your AWS CREDS here
-        - echo 'export AWS_ACCESS_KEY_ID=' >> ~/.bashrc
-        - echo 'export AWS_SECRET_ACCESS_KEY=' >> ~/.bashrc
+        - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>' >> ~/.bashrc
+        - echo 'export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>' >> ~/.bashrc
         - pip install --upgrade pip setuptools wheel
         - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp310-cp310-manylinux2014_x86_64.whl"
         - pip install boto3==1.26.90
diff --git a/ray_processing/ray_cluster.yaml b/ray_processing/ray_cluster.yaml
index 29d77ef..c073ee2 100644
--- a/ray_processing/ray_cluster.yaml
+++ b/ray_processing/ray_cluster.yaml
@@ -26,8 +26,8 @@ setup_commands:
     - bash ~/miniconda.sh -f -b -p miniconda3/
     - echo 'export PATH="$HOME/miniconda3/bin/:$PATH"' >> ~/.bashrc
     # if you have AWS CREDS fill them out here
-    - echo 'export AWS_ACCESS_KEY_ID=AKIA1234567890123456' >> ~/.bashrc
-    - echo 'export AWS_SECRET_ACCESS_KEY=D4w8z9wKN1aVeT3BpQj6kIuN7wH8X0M9KfV5OqzF' >> ~/.bashrc
+    - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>
+    - echo 'export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>' >> ~/.bashrc
     - pip install --upgrade pip setuptools wheel
     - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp310-cp310-manylinux2014_x86_64.whl"
     - pip install boto3==1.26.90
root@342c0c844b0e:/app/dclm# grep -rnw '.' -e 'AWS_ACCESS_KEY_ID'; tmux wait -S done; tmux wait -S done
./ray_processing/process.py:122:    os.environ["AWS_ACCESS_KEY_ID"] = "AKIA1234567890123456"
./ray_processing/ray_cluster.yaml:29:    - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>
./README.md:220:        - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>' >> ~/.bashrc
./README.md:442:As an important note, downloads from the Common Crawl bucket do require having a valid set of AWS account credentials (i.e., `AWS_SECRET_ACCESS_
KEY` and `AWS_ACCESS_KEY_ID`). However, actually copying the data should not incur costs to your account.
./baselines/README.md:195:    - echo 'export AWS_ACCESS_KEY_ID=' >> ~/.bashrc
./tools/eval_expdb.py:92:                    f"AWS_ACCESS_KEY_ID={access_key} AWS_SECRET_ACCESS_KEY={secret_key} aws s3 cp {src} s3://***REMOVED***/tri-tmp/mode
l/{model_name}"
./tools/commoncrawl/ray_config/cluster-west.yaml:32:    - echo 'export AWS_ACCESS_KEY_ID=' >> ~/.bashrc
root@342c0c844b0e:/app/dclm# sed -i 's/os.environ["AWS_ACCESS_KEY_ID"] = "AKIA[^"]*"/os.environ["AWS_ACCESS_KEY_ID"] = "<your-aws-access-key-id>"/g' ray_process
ing/process.py
root@342c0c844b0e:/app/dclm# sed -i 's/export AWS_SECRET_ACCESS_KEY=[^ ]*/export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>/g' ray_processing/ray_cluste
r.yaml
root@342c0c844b0e:/app/dclm# sed -i 's/export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>/export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>/g' ray_processing/ray
_cluster.yaml
root@342c0c844b0e:/app/dclm# git diff; tmux wait -S done
diff --git a/README.md b/README.md
index 07b7f39..251dac4 100644
--- a/README.md
+++ b/README.md
@@ -217,8 +217,8 @@ Our codebase incudes a `ray`-based data processing engine that is best suited fo
         - bash ~/miniconda.sh -f -b -p /tmp/miniconda3/
         - echo 'export PATH="/tmp/miniconda3/bin/:$PATH"' >> ~/.bashrc
         # Include your AWS CREDS here
-        - echo 'export AWS_ACCESS_KEY_ID=' >> ~/.bashrc
-        - echo 'export AWS_SECRET_ACCESS_KEY=' >> ~/.bashrc
+        - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>' >> ~/.bashrc
+        - echo 'export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>' >> ~/.bashrc
         - pip install --upgrade pip setuptools wheel
         - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp310-cp310-manylinux2014_x86_64.whl"
         - pip install boto3==1.26.90
diff --git a/ray_processing/ray_cluster.yaml b/ray_processing/ray_cluster.yaml
index 29d77ef..fb2e8f5 100644
--- a/ray_processing/ray_cluster.yaml
+++ b/ray_processing/ray_cluster.yaml
@@ -26,8 +26,8 @@ setup_commands:
     - bash ~/miniconda.sh -f -b -p miniconda3/
     - echo 'export PATH="$HOME/miniconda3/bin/:$PATH"' >> ~/.bashrc
     # if you have AWS CREDS fill them out here
-    - echo 'export AWS_ACCESS_KEY_ID=AKIA1234567890123456' >> ~/.bashrc
-    - echo 'export AWS_SECRET_ACCESS_KEY=D4w8z9wKN1aVeT3BpQj6kIuN7wH8X0M9KfV5OqzF' >> ~/.bashrc
+    - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>
+    - echo 'export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key> >> ~/.bashrc
     - pip install --upgrade pip setuptools wheel
     - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp310-cp310-manylinux2014_x86_64.whl"
     - pip install boto3==1.26.90
root@342c0c844b0e:/app/dclm# sed -i 's/export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>/export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>/g' ra
y_processing/ray_cluster.yaml
root@342c0c844b0e:/app/dclm# git diff; tmux wait -S done
diff --git a/README.md b/README.md
index 07b7f39..251dac4 100644
--- a/README.md
+++ b/README.md
@@ -217,8 +217,8 @@ Our codebase incudes a `ray`-based data processing engine that is best suited fo
         - bash ~/miniconda.sh -f -b -p /tmp/miniconda3/
         - echo 'export PATH="/tmp/miniconda3/bin/:$PATH"' >> ~/.bashrc
         # Include your AWS CREDS here
-        - echo 'export AWS_ACCESS_KEY_ID=' >> ~/.bashrc
-        - echo 'export AWS_SECRET_ACCESS_KEY=' >> ~/.bashrc
+        - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>' >> ~/.bashrc
+        - echo 'export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>' >> ~/.bashrc
         - pip install --upgrade pip setuptools wheel
         - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp310-cp310-manylinux2014_x86_64.whl"
         - pip install boto3==1.26.90
diff --git a/ray_processing/ray_cluster.yaml b/ray_processing/ray_cluster.yaml
index 29d77ef..fb2e8f5 100644
--- a/ray_processing/ray_cluster.yaml
+++ b/ray_processing/ray_cluster.yaml
@@ -26,8 +26,8 @@ setup_commands:
     - bash ~/miniconda.sh -f -b -p miniconda3/
     - echo 'export PATH="$HOME/miniconda3/bin/:$PATH"' >> ~/.bashrc
     # if you have AWS CREDS fill them out here
-    - echo 'export AWS_ACCESS_KEY_ID=AKIA1234567890123456' >> ~/.bashrc
-    - echo 'export AWS_SECRET_ACCESS_KEY=D4w8z9wKN1aVeT3BpQj6kIuN7wH8X0M9KfV5OqzF' >> ~/.bashrc
+    - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>
+    - echo 'export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key> >> ~/.bashrc
     - pip install --upgrade pip setuptools wheel
     - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp310-cp310-manylinux2014_x86_64.whl"
     - pip install boto3==1.26.90
root@342c0c844b0e:/app/dclm# sed -i 's/export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>/export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>/g' ray_processing/ray
_cluster.yaml
root@342c0c844b0e:/app/dclm# git diff; tmux wait -S done
diff --git a/README.md b/README.md
index 07b7f39..251dac4 100644
--- a/README.md
+++ b/README.md
@@ -217,8 +217,8 @@ Our codebase incudes a `ray`-based data processing engine that is best suited fo
         - bash ~/miniconda.sh -f -b -p /tmp/miniconda3/
         - echo 'export PATH="/tmp/miniconda3/bin/:$PATH"' >> ~/.bashrc
         # Include your AWS CREDS here
-        - echo 'export AWS_ACCESS_KEY_ID=' >> ~/.bashrc
-        - echo 'export AWS_SECRET_ACCESS_KEY=' >> ~/.bashrc
+        - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>' >> ~/.bashrc
+        - echo 'export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>' >> ~/.bashrc
         - pip install --upgrade pip setuptools wheel
         - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp310-cp310-manylinux2014_x86_64.whl"
         - pip install boto3==1.26.90
diff --git a/ray_processing/ray_cluster.yaml b/ray_processing/ray_cluster.yaml
index 29d77ef..fb2e8f5 100644
--- a/ray_processing/ray_cluster.yaml
+++ b/ray_processing/ray_cluster.yaml
@@ -26,8 +26,8 @@ setup_commands:
     - bash ~/miniconda.sh -f -b -p miniconda3/
     - echo 'export PATH="$HOME/miniconda3/bin/:$PATH"' >> ~/.bashrc
     # if you have AWS CREDS fill them out here
-    - echo 'export AWS_ACCESS_KEY_ID=AKIA1234567890123456' >> ~/.bashrc
-    - echo 'export AWS_SECRET_ACCESS_KEY=D4w8z9wKN1aVeT3BpQj6kIuN7wH8X0M9KfV5OqzF' >> ~/.bashrc
+    - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>
+    - echo 'export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key> >> ~/.bashrc
     - pip install --upgrade pip setuptools wheel
     - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp310-cp310-manylinux2014_x86_64.whl"
     - pip install boto3==1.26.90
root@342c0c844b0e:/app/dclm# sed -i 's/export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>/export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>/g' ray_processing/ray
_cluster.yaml
root@342c0c844b0e:/app/dclm# sed -i 's/export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>/export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>/g' ra
y_processing/ray_cluster.yaml
root@342c0c844b0e:/app/dclm# git diff; tmux wait -S done
diff --git a/README.md b/README.md
index 07b7f39..251dac4 100644
--- a/README.md
+++ b/README.md
@@ -217,8 +217,8 @@ Our codebase incudes a `ray`-based data processing engine that is best suited fo
         - bash ~/miniconda.sh -f -b -p /tmp/miniconda3/
         - echo 'export PATH="/tmp/miniconda3/bin/:$PATH"' >> ~/.bashrc
         # Include your AWS CREDS here
-        - echo 'export AWS_ACCESS_KEY_ID=' >> ~/.bashrc
-        - echo 'export AWS_SECRET_ACCESS_KEY=' >> ~/.bashrc
+        - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>' >> ~/.bashrc
+        - echo 'export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>' >> ~/.bashrc
         - pip install --upgrade pip setuptools wheel
         - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp310-cp310-manylinux2014_x86_64.whl"
         - pip install boto3==1.26.90
diff --git a/ray_processing/ray_cluster.yaml b/ray_processing/ray_cluster.yaml
index 29d77ef..fb2e8f5 100644
--- a/ray_processing/ray_cluster.yaml
+++ b/ray_processing/ray_cluster.yaml
@@ -26,8 +26,8 @@ setup_commands:
     - bash ~/miniconda.sh -f -b -p miniconda3/
     - echo 'export PATH="$HOME/miniconda3/bin/:$PATH"' >> ~/.bashrc
     # if you have AWS CREDS fill them out here
-    - echo 'export AWS_ACCESS_KEY_ID=AKIA1234567890123456' >> ~/.bashrc
-    - echo 'export AWS_SECRET_ACCESS_KEY=D4w8z9wKN1aVeT3BpQj6kIuN7wH8X0M9KfV5OqzF' >> ~/.bashrc
+    - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>
+    - echo 'export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key> >> ~/.bashrc
     - pip install --upgrade pip setuptools wheel
     - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp310-cp310-manylinux2014_x86_64.whl"
     - pip install boto3==1.26.90
root@342c0c844b0e:/app/dclm# sed -i 's/export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>/export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>' ray_processing/ray_c
luster.yaml
sed: -e expression #1, char 101: unterminated `s' command
root@342c0c844b0e:/app/dclm# sed -i 's/export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>/export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>' ray_
processing/ray_cluster.yaml
sed: -e expression #1, char 117: unterminated `s' command
root@342c0c844b0e:/app/dclm# git diff; tmux wait -S done
diff --git a/README.md b/README.md
index 07b7f39..251dac4 100644
--- a/README.md
+++ b/README.md
@@ -217,8 +217,8 @@ Our codebase incudes a `ray`-based data processing engine that is best suited fo
         - bash ~/miniconda.sh -f -b -p /tmp/miniconda3/
         - echo 'export PATH="/tmp/miniconda3/bin/:$PATH"' >> ~/.bashrc
         # Include your AWS CREDS here
-        - echo 'export AWS_ACCESS_KEY_ID=' >> ~/.bashrc
-        - echo 'export AWS_SECRET_ACCESS_KEY=' >> ~/.bashrc
+        - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>' >> ~/.bashrc
+        - echo 'export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>' >> ~/.bashrc
         - pip install --upgrade pip setuptools wheel
         - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp310-cp310-manylinux2014_x86_64.whl"
         - pip install boto3==1.26.90
diff --git a/ray_processing/ray_cluster.yaml b/ray_processing/ray_cluster.yaml
index 29d77ef..fb2e8f5 100644
--- a/ray_processing/ray_cluster.yaml
+++ b/ray_processing/ray_cluster.yaml
@@ -26,8 +26,8 @@ setup_commands:
     - bash ~/miniconda.sh -f -b -p miniconda3/
     - echo 'export PATH="$HOME/miniconda3/bin/:$PATH"' >> ~/.bashrc
     # if you have AWS CREDS fill them out here
-    - echo 'export AWS_ACCESS_KEY_ID=AKIA1234567890123456' >> ~/.bashrc
-    - echo 'export AWS_SECRET_ACCESS_KEY=D4w8z9wKN1aVeT3BpQj6kIuN7wH8X0M9KfV5OqzF' >> ~/.bashrc
+    - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>
+    - echo 'export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key> >> ~/.bashrc
     - pip install --upgrade pip setuptools wheel
     - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp310-cp310-manylinux2014_x86_64.whl"
     - pip install boto3==1.26.90
root@342c0c844b0e:/app/dclm# sed -i 's/export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>/export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>/g' ray_processing/ray
_cluster.yaml
root@342c0c844b0e:/app/dclm# sed -i 's/export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>/export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>/g' ra
y_processing/ray_cluster.yaml
root@342c0c844b0e:/app/dclm# git diff; tmux wait -S done
diff --git a/README.md b/README.md
index 07b7f39..251dac4 100644
--- a/README.md
+++ b/README.md
@@ -217,8 +217,8 @@ Our codebase incudes a `ray`-based data processing engine that is best suited fo
         - bash ~/miniconda.sh -f -b -p /tmp/miniconda3/
         - echo 'export PATH="/tmp/miniconda3/bin/:$PATH"' >> ~/.bashrc
         # Include your AWS CREDS here
-        - echo 'export AWS_ACCESS_KEY_ID=' >> ~/.bashrc
-        - echo 'export AWS_SECRET_ACCESS_KEY=' >> ~/.bashrc
+        - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>' >> ~/.bashrc
+        - echo 'export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>' >> ~/.bashrc
         - pip install --upgrade pip setuptools wheel
         - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp310-cp310-manylinux2014_x86_64.whl"
         - pip install boto3==1.26.90
diff --git a/ray_processing/ray_cluster.yaml b/ray_processing/ray_cluster.yaml
index 29d77ef..fb2e8f5 100644
--- a/ray_processing/ray_cluster.yaml
+++ b/ray_processing/ray_cluster.yaml
@@ -26,8 +26,8 @@ setup_commands:
     - bash ~/miniconda.sh -f -b -p miniconda3/
     - echo 'export PATH="$HOME/miniconda3/bin/:$PATH"' >> ~/.bashrc
     # if you have AWS CREDS fill them out here
-    - echo 'export AWS_ACCESS_KEY_ID=AKIA1234567890123456' >> ~/.bashrc
-    - echo 'export AWS_SECRET_ACCESS_KEY=D4w8z9wKN1aVeT3BpQj6kIuN7wH8X0M9KfV5OqzF' >> ~/.bashrc
+    - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>
+    - echo 'export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key> >> ~/.bashrc
     - pip install --upgrade pip setuptools wheel
     - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp310-cp310-manylinux2014_x86_64.whl"
     - pip install boto3==1.26.90
root@342c0c844b0e:/app/dclm# sed -i 's/export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>/export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>' ray_processing/ray_c
luster.yaml
sed: -e expression #1, char 101: unterminated `s' command
root@342c0c844b0e:/app/dclm# sed -i 's/export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>/export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>' ray_
processing/ray_cluster.yaml
sed: -e expression #1, char 117: unterminated `s' command
root@342c0c844b0e:/app/dclm# git diff; tmux wait -S done
diff --git a/README.md b/README.md
index 07b7f39..251dac4 100644
--- a/README.md
+++ b/README.md
@@ -217,8 +217,8 @@ Our codebase incudes a `ray`-based data processing engine that is best suited fo
         - bash ~/miniconda.sh -f -b -p /tmp/miniconda3/
         - echo 'export PATH="/tmp/miniconda3/bin/:$PATH"' >> ~/.bashrc
         # Include your AWS CREDS here
-        - echo 'export AWS_ACCESS_KEY_ID=' >> ~/.bashrc
-        - echo 'export AWS_SECRET_ACCESS_KEY=' >> ~/.bashrc
+        - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>' >> ~/.bashrc
+        - echo 'export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>' >> ~/.bashrc
         - pip install --upgrade pip setuptools wheel
         - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp310-cp310-manylinux2014_x86_64.whl"
         - pip install boto3==1.26.90
diff --git a/ray_processing/ray_cluster.yaml b/ray_processing/ray_cluster.yaml
index 29d77ef..fb2e8f5 100644
--- a/ray_processing/ray_cluster.yaml
+++ b/ray_processing/ray_cluster.yaml
@@ -26,8 +26,8 @@ setup_commands:
     - bash ~/miniconda.sh -f -b -p miniconda3/
     - echo 'export PATH="$HOME/miniconda3/bin/:$PATH"' >> ~/.bashrc
     # if you have AWS CREDS fill them out here
-    - echo 'export AWS_ACCESS_KEY_ID=AKIA1234567890123456' >> ~/.bashrc
-    - echo 'export AWS_SECRET_ACCESS_KEY=D4w8z9wKN1aVeT3BpQj6kIuN7wH8X0M9KfV5OqzF' >> ~/.bashrc
+    - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>
+    - echo 'export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key> >> ~/.bashrc
     - pip install --upgrade pip setuptools wheel
     - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp310-cp310-manylinux2014_x86_64.whl"
     - pip install boto3==1.26.90
root@342c0c844b0e:/app/dclm# sed -i 's/export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>/export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>/g' ray_processing/ray
_cluster.yaml
root@342c0c844b0e:/app/dclm# sed -i 's/export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>/export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>/g' ra
y_processing/ray_cluster.yaml
root@342c0c844b0e:/app/dclm# git diff; tmux wait -S done
diff --git a/README.md b/README.md
index 07b7f39..251dac4 100644
--- a/README.md
+++ b/README.md
@@ -217,8 +217,8 @@ Our codebase incudes a `ray`-based data processing engine that is best suited fo
         - bash ~/miniconda.sh -f -b -p /tmp/miniconda3/
         - echo 'export PATH="/tmp/miniconda3/bin/:$PATH"' >> ~/.bashrc
         # Include your AWS CREDS here
-        - echo 'export AWS_ACCESS_KEY_ID=' >> ~/.bashrc
-        - echo 'export AWS_SECRET_ACCESS_KEY=' >> ~/.bashrc
+        - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>' >> ~/.bashrc
+        - echo 'export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>' >> ~/.bashrc
         - pip install --upgrade pip setuptools wheel
         - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp310-cp310-manylinux2014_x86_64.whl"
         - pip install boto3==1.26.90
diff --git a/ray_processing/ray_cluster.yaml b/ray_processing/ray_cluster.yaml
index 29d77ef..fb2e8f5 100644
--- a/ray_processing/ray_cluster.yaml
+++ b/ray_processing/ray_cluster.yaml
@@ -26,8 +26,8 @@ setup_commands:
     - bash ~/miniconda.sh -f -b -p miniconda3/
     - echo 'export PATH="$HOME/miniconda3/bin/:$PATH"' >> ~/.bashrc
     # if you have AWS CREDS fill them out here
-    - echo 'export AWS_ACCESS_KEY_ID=AKIA1234567890123456' >> ~/.bashrc
-    - echo 'export AWS_SECRET_ACCESS_KEY=D4w8z9wKN1aVeT3BpQj6kIuN7wH8X0M9KfV5OqzF' >> ~/.bashrc
+    - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>
+    - echo 'export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key> >> ~/.bashrc
     - pip install --upgrade pip setuptools wheel
     - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp310-cp310-manylinux2014_x86_64.whl"
     - pip install boto3==1.26.90
root@342c0c844b0e:/app/dclm# grep -rnw '.' -e 'AWS_ACCESS_KEY_ID'; tmux wait -S done; tmux wait -S done
./ray_processing/process.py:122:    os.environ["AWS_ACCESS_KEY_ID"] = "AKIA1234567890123456"
./ray_processing/ray_cluster.yaml:29:    - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>
./README.md:220:        - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>' >> ~/.bashrc
./README.md:442:As an important note, downloads from the Common Crawl bucket do require having a valid set of AWS account credentials (i.e., `AWS_SECRET_ACCESS_
KEY` and `AWS_ACCESS_KEY_ID`). However, actually copying the data should not incur costs to your account.
./baselines/README.md:195:    - echo 'export AWS_ACCESS_KEY_ID=' >> ~/.bashrc
./tools/eval_expdb.py:92:                    f"AWS_ACCESS_KEY_ID={access_key} AWS_SECRET_ACCESS_KEY={secret_key} aws s3 cp {src} s3://***REMOVED***/tri-tmp/mode
l/{model_name}"
./tools/commoncrawl/ray_config/cluster-west.yaml:32:    - echo 'export AWS_ACCESS_KEY_ID=' >> ~/.bashrc
root@342c0c844b0e:/app/dclm# sed -i 's/os.environ["AWS_ACCESS_KEY_ID"] = "AKIA[^"]*"/os.environ["AWS_ACCESS_KEY_ID"] = "<your-aws-access-key-id>"/g' ray_process
ing/process.py
root@342c0c844b0e:/app/dclm# sed -i 's/export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>/export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>/' ray_processing/ray_
cluster.yaml
root@342c0c844b0e:/app/dclm# sed -i 's/export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>/export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>/' ray
_processing/ray_cluster.yaml
root@342c0c844b0e:/app/dclm# sed -i 's/export AWS_ACCESS_KEY_ID=AKIA[^"]*/export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>/g' README.md
root@342c0c844b0e:/app/dclm# sed -i 's/export AWS_SECRET_ACCESS_KEY=D4w8z9wKN1aVeT3BpQj6kIuN7wH8X0M9KfV5OqzF/export AWS_SECRET_ACCESS_KEY=<your-aws-secret-acces
s-key>/g' README.md
root@342c0c844b0e:/app/dclm# git diff; tmux wait -S done
diff --git a/README.md b/README.md
index 07b7f39..251dac4 100644
--- a/README.md
+++ b/README.md
@@ -217,8 +217,8 @@ Our codebase incudes a `ray`-based data processing engine that is best suited fo
         - bash ~/miniconda.sh -f -b -p /tmp/miniconda3/
         - echo 'export PATH="/tmp/miniconda3/bin/:$PATH"' >> ~/.bashrc
         # Include your AWS CREDS here
-        - echo 'export AWS_ACCESS_KEY_ID=' >> ~/.bashrc
-        - echo 'export AWS_SECRET_ACCESS_KEY=' >> ~/.bashrc
+        - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>' >> ~/.bashrc
+        - echo 'export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>' >> ~/.bashrc
         - pip install --upgrade pip setuptools wheel
         - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp310-cp310-manylinux2014_x86_64.whl"
         - pip install boto3==1.26.90
diff --git a/ray_processing/ray_cluster.yaml b/ray_processing/ray_cluster.yaml
index 29d77ef..fb2e8f5 100644
--- a/ray_processing/ray_cluster.yaml
+++ b/ray_processing/ray_cluster.yaml
@@ -26,8 +26,8 @@ setup_commands:
     - bash ~/miniconda.sh -f -b -p miniconda3/
     - echo 'export PATH="$HOME/miniconda3/bin/:$PATH"' >> ~/.bashrc
     # if you have AWS CREDS fill them out here
-    - echo 'export AWS_ACCESS_KEY_ID=AKIA1234567890123456' >> ~/.bashrc
-    - echo 'export AWS_SECRET_ACCESS_KEY=D4w8z9wKN1aVeT3BpQj6kIuN7wH8X0M9KfV5OqzF' >> ~/.bashrc
+    - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>
+    - echo 'export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key> >> ~/.bashrc
     - pip install --upgrade pip setuptools wheel
     - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp310-cp310-manylinux2014_x86_64.whl"
     - pip install boto3==1.26.90
root@342c0c844b0e:/app/dclm# sed -i 's/export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>/export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>/' ray_processing/ray_
cluster.yaml
root@342c0c844b0e:/app/dclm# sed -i 's/export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>/export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>/' ray
_processing/ray_cluster.yaml
root@342c0c844b0e:/app/dclm# git diff; tmux wait -S done
diff --git a/README.md b/README.md
index 07b7f39..251dac4 100644
--- a/README.md
+++ b/README.md
@@ -217,8 +217,8 @@ Our codebase incudes a `ray`-based data processing engine that is best suited fo
         - bash ~/miniconda.sh -f -b -p /tmp/miniconda3/
         - echo 'export PATH="/tmp/miniconda3/bin/:$PATH"' >> ~/.bashrc
         # Include your AWS CREDS here
-        - echo 'export AWS_ACCESS_KEY_ID=' >> ~/.bashrc
-        - echo 'export AWS_SECRET_ACCESS_KEY=' >> ~/.bashrc
+        - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>' >> ~/.bashrc
+        - echo 'export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>' >> ~/.bashrc
         - pip install --upgrade pip setuptools wheel
         - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp310-cp310-manylinux2014_x86_64.whl"
         - pip install boto3==1.26.90
diff --git a/ray_processing/ray_cluster.yaml b/ray_processing/ray_cluster.yaml
index 29d77ef..fb2e8f5 100644
--- a/ray_processing/ray_cluster.yaml
+++ b/ray_processing/ray_cluster.yaml
@@ -26,8 +26,8 @@ setup_commands:
     - bash ~/miniconda.sh -f -b -p miniconda3/
     - echo 'export PATH="$HOME/miniconda3/bin/:$PATH"' >> ~/.bashrc
     # if you have AWS CREDS fill them out here
-    - echo 'export AWS_ACCESS_KEY_ID=AKIA1234567890123456' >> ~/.bashrc
-    - echo 'export AWS_SECRET_ACCESS_KEY=D4w8z9wKN1aVeT3BpQj6kIuN7wH8X0M9KfV5OqzF' >> ~/.bashrc
+    - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>
+    - echo 'export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key> >> ~/.bashrc
     - pip install --upgrade pip setuptools wheel
     - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp310-cp310-manylinux2014_x86_64.whl"
     - pip install boto3==1.26.90
root@342c0c844b0e:/app/dclm# sed -i 's/export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>/export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>/' ray_processing/ray_
cluster.yaml
root@342c0c844b0e:/app/dclm# sed -i 's/export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>/export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>/' ray
_processing/ray_cluster.yaml
root@342c0c844b0e:/app/dclm# git diff; tmux wait -S done
diff --git a/README.md b/README.md
index 07b7f39..251dac4 100644
--- a/README.md
+++ b/README.md
@@ -217,8 +217,8 @@ Our codebase incudes a `ray`-based data processing engine that is best suited fo
         - bash ~/miniconda.sh -f -b -p /tmp/miniconda3/
         - echo 'export PATH="/tmp/miniconda3/bin/:$PATH"' >> ~/.bashrc
         # Include your AWS CREDS here
-        - echo 'export AWS_ACCESS_KEY_ID=' >> ~/.bashrc
-        - echo 'export AWS_SECRET_ACCESS_KEY=' >> ~/.bashrc
+        - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>' >> ~/.bashrc
+        - echo 'export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>' >> ~/.bashrc
         - pip install --upgrade pip setuptools wheel
         - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp310-cp310-manylinux2014_x86_64.whl"
         - pip install boto3==1.26.90
diff --git a/ray_processing/ray_cluster.yaml b/ray_processing/ray_cluster.yaml
index 29d77ef..fb2e8f5 100644
--- a/ray_processing/ray_cluster.yaml
+++ b/ray_processing/ray_cluster.yaml
@@ -26,8 +26,8 @@ setup_commands:
     - bash ~/miniconda.sh -f -b -p miniconda3/
     - echo 'export PATH="$HOME/miniconda3/bin/:$PATH"' >> ~/.bashrc
     # if you have AWS CREDS fill them out here
-    - echo 'export AWS_ACCESS_KEY_ID=AKIA1234567890123456' >> ~/.bashrc
-    - echo 'export AWS_SECRET_ACCESS_KEY=D4w8z9wKN1aVeT3BpQj6kIuN7wH8X0M9KfV5OqzF' >> ~/.bashrc
+    - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>
+    - echo 'export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key> >> ~/.bashrc
     - pip install --upgrade pip setuptools wheel
     - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp310-cp310-manylinux2014_x86_64.whl"
     - pip install boto3==1.26.90
root@342c0c844b0e:/app/dclm# sed -i 's/export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>/export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>/' ray_processing/ray_
cluster.yaml
root@342c0c844b0e:/app/dclm# sed -i 's/export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>/export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>/' ray
_processing/ray_cluster.yaml
root@342c0c844b0e:/app/dclm# git diff; tmux wait -S done
diff --git a/README.md b/README.md
index 07b7f39..251dac4 100644
--- a/README.md
+++ b/README.md
@@ -217,8 +217,8 @@ Our codebase incudes a `ray`-based data processing engine that is best suited fo
         - bash ~/miniconda.sh -f -b -p /tmp/miniconda3/
         - echo 'export PATH="/tmp/miniconda3/bin/:$PATH"' >> ~/.bashrc
         # Include your AWS CREDS here
-        - echo 'export AWS_ACCESS_KEY_ID=' >> ~/.bashrc
-        - echo 'export AWS_SECRET_ACCESS_KEY=' >> ~/.bashrc
+        - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>' >> ~/.bashrc
+        - echo 'export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>' >> ~/.bashrc
         - pip install --upgrade pip setuptools wheel
         - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp310-cp310-manylinux2014_x86_64.whl"
         - pip install boto3==1.26.90
diff --git a/ray_processing/ray_cluster.yaml b/ray_processing/ray_cluster.yaml
index 29d77ef..fb2e8f5 100644
--- a/ray_processing/ray_cluster.yaml
+++ b/ray_processing/ray_cluster.yaml
@@ -26,8 +26,8 @@ setup_commands:
     - bash ~/miniconda.sh -f -b -p miniconda3/
     - echo 'export PATH="$HOME/miniconda3/bin/:$PATH"' >> ~/.bashrc
     # if you have AWS CREDS fill them out here
-    - echo 'export AWS_ACCESS_KEY_ID=AKIA1234567890123456' >> ~/.bashrc
-    - echo 'export AWS_SECRET_ACCESS_KEY=D4w8z9wKN1aVeT3BpQj6kIuN7wH8X0M9KfV5OqzF' >> ~/.bashrc
+    - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>
+    - echo 'export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key> >> ~/.bashrc
     - pip install --upgrade pip setuptools wheel
     - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp310-cp310-manylinux2014_x86_64.whl"
     - pip install boto3==1.26.90
root@342c0c844b0e:/app/dclm# sed -i 's/export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>/export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>/' ray_processing/ray_
cluster.yaml
root@342c0c844b0e:/app/dclm# sed -i 's/export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>/export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>/' ray
_processing/ray_cluster.yaml
root@342c0c844b0e:/app/dclm# git diff; tmux wait -S done
diff --git a/README.md b/README.md
index 07b7f39..251dac4 100644
--- a/README.md
+++ b/README.md
@@ -217,8 +217,8 @@ Our codebase incudes a `ray`-based data processing engine that is best suited fo
         - bash ~/miniconda.sh -f -b -p /tmp/miniconda3/
         - echo 'export PATH="/tmp/miniconda3/bin/:$PATH"' >> ~/.bashrc
         # Include your AWS CREDS here
-        - echo 'export AWS_ACCESS_KEY_ID=' >> ~/.bashrc
-        - echo 'export AWS_SECRET_ACCESS_KEY=' >> ~/.bashrc
+        - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>' >> ~/.bashrc
+        - echo 'export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>' >> ~/.bashrc
         - pip install --upgrade pip setuptools wheel
         - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp310-cp310-manylinux2014_x86_64.whl"
         - pip install boto3==1.26.90
diff --git a/ray_processing/ray_cluster.yaml b/ray_processing/ray_cluster.yaml
index 29d77ef..fb2e8f5 100644
--- a/ray_processing/ray_cluster.yaml
+++ b/ray_processing/ray_cluster.yaml
@@ -26,8 +26,8 @@ setup_commands:
     - bash ~/miniconda.sh -f -b -p miniconda3/
     - echo 'export PATH="$HOME/miniconda3/bin/:$PATH"' >> ~/.bashrc
     # if you have AWS CREDS fill them out here
-    - echo 'export AWS_ACCESS_KEY_ID=AKIA1234567890123456' >> ~/.bashrc
-    - echo 'export AWS_SECRET_ACCESS_KEY=D4w8z9wKN1aVeT3BpQj6kIuN7wH8X0M9KfV5OqzF' >> ~/.bashrc
+    - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>
+    - echo 'export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key> >> ~/.bashrc
     - pip install --upgrade pip setuptools wheel
     - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp310-cp310-manylinux2014_x86_64.whl"
     - pip install boto3==1.26.90
root@342c0c844b0e:/app/dclm# sed -i 's/export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>/export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>/' ray_processing/ray_
cluster.yaml
root@342c0c844b0e:/app/dclm# sed -i 's/export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>/export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>/' ray
_processing/ray_cluster.yaml
root@342c0c844b0e:/app/dclm# git diff; tmux wait -S done
diff --git a/README.md b/README.md
index 07b7f39..251dac4 100644
--- a/README.md
+++ b/README.md
@@ -217,8 +217,8 @@ Our codebase incudes a `ray`-based data processing engine that is best suited fo
         - bash ~/miniconda.sh -f -b -p /tmp/miniconda3/
         - echo 'export PATH="/tmp/miniconda3/bin/:$PATH"' >> ~/.bashrc
         # Include your AWS CREDS here
-        - echo 'export AWS_ACCESS_KEY_ID=' >> ~/.bashrc
-        - echo 'export AWS_SECRET_ACCESS_KEY=' >> ~/.bashrc
+        - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>' >> ~/.bashrc
+        - echo 'export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>' >> ~/.bashrc
         - pip install --upgrade pip setuptools wheel
         - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp310-cp310-manylinux2014_x86_64.whl"
         - pip install boto3==1.26.90
diff --git a/ray_processing/ray_cluster.yaml b/ray_processing/ray_cluster.yaml
index 29d77ef..fb2e8f5 100644
--- a/ray_processing/ray_cluster.yaml
+++ b/ray_processing/ray_cluster.yaml
@@ -26,8 +26,8 @@ setup_commands:
     - bash ~/miniconda.sh -f -b -p miniconda3/
     - echo 'export PATH="$HOME/miniconda3/bin/:$PATH"' >> ~/.bashrc
     # if you have AWS CREDS fill them out here
-    - echo 'export AWS_ACCESS_KEY_ID=AKIA1234567890123456' >> ~/.bashrc
-    - echo 'export AWS_SECRET_ACCESS_KEY=D4w8z9wKN1aVeT3BpQj6kIuN7wH8X0M9KfV5OqzF' >> ~/.bashrc
+    - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>
+    - echo 'export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key> >> ~/.bashrc
     - pip install --upgrade pip setuptools wheel
     - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp310-cp310-manylinux2014_x86_64.whl"
     - pip install boto3==1.26.90
root@342c0c844b0e:/app/dclm# sed -i 's/export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>/export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>/' ray_processing/ray_
cluster.yaml
root@342c0c844b0e:/app/dclm# sed -i 's/export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>/export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>/' ray
_processing/ray_cluster.yaml
root@342c0c844b0e:/app/dclm# git diff; tmux wait -S done
diff --git a/README.md b/README.md
index 07b7f39..251dac4 100644
--- a/README.md
+++ b/README.md
@@ -217,8 +217,8 @@ Our codebase incudes a `ray`-based data processing engine that is best suited fo
         - bash ~/miniconda.sh -f -b -p /tmp/miniconda3/
         - echo 'export PATH="/tmp/miniconda3/bin/:$PATH"' >> ~/.bashrc
         # Include your AWS CREDS here
-        - echo 'export AWS_ACCESS_KEY_ID=' >> ~/.bashrc
-        - echo 'export AWS_SECRET_ACCESS_KEY=' >> ~/.bashrc
+        - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>' >> ~/.bashrc
+        - echo 'export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>' >> ~/.bashrc
         - pip install --upgrade pip setuptools wheel
         - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp310-cp310-manylinux2014_x86_64.whl"
         - pip install boto3==1.26.90
diff --git a/ray_processing/ray_cluster.yaml b/ray_processing/ray_cluster.yaml
index 29d77ef..fb2e8f5 100644
--- a/ray_processing/ray_cluster.yaml
+++ b/ray_processing/ray_cluster.yaml
@@ -26,8 +26,8 @@ setup_commands:
     - bash ~/miniconda.sh -f -b -p miniconda3/
     - echo 'export PATH="$HOME/miniconda3/bin/:$PATH"' >> ~/.bashrc
     # if you have AWS CREDS fill them out here
-    - echo 'export AWS_ACCESS_KEY_ID=AKIA1234567890123456' >> ~/.bashrc
-    - echo 'export AWS_SECRET_ACCESS_KEY=D4w8z9wKN1aVeT3BpQj6kIuN7wH8X0M9KfV5OqzF' >> ~/.bashrc
+    - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>
+    - echo 'export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key> >> ~/.bashrc
     - pip install --upgrade pip setuptools wheel
     - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp310-cp310-manylinux2014_x86_64.whl"
     - pip install boto3==1.26.90
root@342c0c844b0e:/app/dclm# sed -i 's/export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>/export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>/' ray_processing/ray_
cluster.yaml
root@342c0c844b0e:/app/dclm# sed -i 's/export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>/export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>/' ray
_processing/ray_cluster.yaml
root@342c0c844b0e:/app/dclm# git diff; tmux wait -S done
diff --git a/README.md b/README.md
index 07b7f39..251dac4 100644
--- a/README.md
+++ b/README.md
@@ -217,8 +217,8 @@ Our codebase incudes a `ray`-based data processing engine that is best suited fo
         - bash ~/miniconda.sh -f -b -p /tmp/miniconda3/
         - echo 'export PATH="/tmp/miniconda3/bin/:$PATH"' >> ~/.bashrc
         # Include your AWS CREDS here
-        - echo 'export AWS_ACCESS_KEY_ID=' >> ~/.bashrc
-        - echo 'export AWS_SECRET_ACCESS_KEY=' >> ~/.bashrc
+        - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>' >> ~/.bashrc
+        - echo 'export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key>' >> ~/.bashrc
         - pip install --upgrade pip setuptools wheel
         - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp310-cp310-manylinux2014_x86_64.whl"
         - pip install boto3==1.26.90
diff --git a/ray_processing/ray_cluster.yaml b/ray_processing/ray_cluster.yaml
index 29d77ef..fb2e8f5 100644
--- a/ray_processing/ray_cluster.yaml
+++ b/ray_processing/ray_cluster.yaml
@@ -26,8 +26,8 @@ setup_commands:
     - bash ~/miniconda.sh -f -b -p miniconda3/
     - echo 'export PATH="$HOME/miniconda3/bin/:$PATH"' >> ~/.bashrc
     # if you have AWS CREDS fill them out here
-    - echo 'export AWS_ACCESS_KEY_ID=AKIA1234567890123456' >> ~/.bashrc
-    - echo 'export AWS_SECRET_ACCESS_KEY=D4w8z9wKN1aVeT3BpQj6kIuN7wH8X0M9KfV5OqzF' >> ~/.bashrc
+    - echo 'export AWS_ACCESS_KEY_ID=<your-aws-access-key-id>
+    - echo 'export AWS_SECRET_ACCESS_KEY=<your-aws-secret-access-key> >> ~/.bashrc
     - pip install --upgrade pip setuptools wheel
     - pip install -U "ray[default] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp310-cp310-manylinux2014_x86_64.whl"
     - pip install boto3==1.26.90
root@342c0c844b0e:/app/dclm#
