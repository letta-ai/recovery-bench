root@7d3133820f67:/app# bash /tests/run-tests.sh; tmux wait -S done
Collecting pytest==8.4.1
  Downloading pytest-8.4.1-py3-none-any.whl.metadata (7.7 kB)
Collecting iniconfig>=1 (from pytest==8.4.1)
  Downloading iniconfig-2.1.0-py3-none-any.whl.metadata (2.7 kB)
Requirement already satisfied: packaging>=20 in /usr/local/lib/python3.13/site-packages (from pytest==8.4.1) (25.0)
Collecting pluggy<2,>=1.5 (from pytest==8.4.1)
  Downloading pluggy-1.6.0-py3-none-any.whl.metadata (4.8 kB)
Requirement already satisfied: pygments>=2.7.2 in /usr/local/lib/python3.13/site-packages (from pytest==8.4.1) (2.19.2)
Downloading pytest-8.4.1-py3-none-any.whl (365 kB)
Downloading iniconfig-2.1.0-py3-none-any.whl (6.0 kB)
Downloading pluggy-1.6.0-py3-none-any.whl (20 kB)
Installing collected packages: pluggy, iniconfig, pytest
Successfully installed iniconfig-2.1.0 pluggy-1.6.0 pytest-8.4.1
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your syst
em unusable.It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you ar
e doing and want to suppress this warning.

[notice] A new release of pip is available: 24.3.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip
===================================================================== test session starts ======================================================================
platform linux -- Python 3.13.1, pytest-8.4.1, pluggy-1.6.0
rootdir: /tests
plugins: anyio-4.9.0
collected 8 items

../tests/test_outputs.py .....F..                                                                                                                        [100%]

=========================================================================== FAILURES ===========================================================================
______________________________________________________ test_implementation_handles_stability_calculation _______________________________________________________

    def test_implementation_handles_stability_calculation():
        """Test that the implementation correctly calculates stability"""
        import sys
        sys.path.append('/app')

        from sklearn.datasets import make_blobs

        try:
            from stable_kmeans import StableKMeans
        except ImportError:
            assert False, "Could not import StableKMeans from stable_kmeans.py"

        # Generate test data with known cluster structure
        data, _ = make_blobs(
            n_samples=100, centers=3, n_features=2, random_state=42, cluster_std=1.0
        )

        # Test with small parameters for quick testing
        sk = StableKMeans(data, k_max=5, number_of_subsamples=5)
        sk.fit_serial(verbose=False)

        # Test that get_stability_summary returns valid results
        stability_summary = sk.get_stability_summary()
        assert stability_summary is not None, "get_stability_summary should return a value"
        assert len(stability_summary) > 0, "Stability summary should contain results"

        # Test that optimal k is determined
        optimal_k = sk.get_optimal_k()
        assert optimal_k is not None, "get_optimal_k should return a value"
>       assert isinstance(optimal_k, int), "get_optimal_k should return an integer"
E       AssertionError: get_optimal_k should return an integer
E       assert False
E        +  where False = isinstance(np.int64(4), int)

/tests/test_outputs.py:88: AssertionError
============================================================================ PASSES ============================================================================
=================================================================== short test summary info ====================================================================
PASSED ../tests/test_outputs.py::test_stable_kmeans_file_exists
PASSED ../tests/test_outputs.py::test_test_implementation_file_exists
PASSED ../tests/test_outputs.py::test_stable_kmeans_has_required_classes
PASSED ../tests/test_outputs.py::test_stable_kmeans_has_multiprocessing
PASSED ../tests/test_outputs.py::test_stable_kmeans_has_sklearn_integration
PASSED ../tests/test_outputs.py::test_test_implementation_generates_synthetic_data
PASSED ../tests/test_outputs.py::test_implementation_has_optimal_k_detection
FAILED ../tests/test_outputs.py::test_implementation_handles_stability_calculation - AssertionError: get_optimal_k should return an integer
================================================================= 1 failed, 7 passed in 2.90s ==================================================================
root@7d3133820f67:/app#
