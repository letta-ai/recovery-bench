root@4f533a935f3e:/app# bash /tests/run-tests.sh; tmux wait -S done
Collecting pytest==8.4.1
  Downloading pytest-8.4.1-py3-none-any.whl.metadata (7.7 kB)
Collecting iniconfig>=1 (from pytest==8.4.1)
  Downloading iniconfig-2.1.0-py3-none-any.whl.metadata (2.7 kB)
Requirement already satisfied: packaging>=20 in /usr/local/lib/python3.13/site-packages (from pytest==8.4.1) (24.2)
Collecting pluggy<2,>=1.5 (from pytest==8.4.1)
  Downloading pluggy-1.6.0-py3-none-any.whl.metadata (4.8 kB)
Collecting pygments>=2.7.2 (from pytest==8.4.1)
  Downloading pygments-2.19.2-py3-none-any.whl.metadata (2.5 kB)
Downloading pytest-8.4.1-py3-none-any.whl (365 kB)
Downloading iniconfig-2.1.0-py3-none-any.whl (6.0 kB)
Downloading pluggy-1.6.0-py3-none-any.whl (20 kB)
Downloading pygments-2.19.2-py3-none-any.whl (1.2 MB)
   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.2/1.2 MB 42.4 MB/s eta 0:00:00
Installing collected packages: pygments, pluggy, iniconfig, pytest
Successfully installed iniconfig-2.1.0 pluggy-1.6.0 pygments-2.19.2 pytest-8.4.1
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your syst
em unusable.It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you ar
e doing and want to suppress this warning.

[notice] A new release of pip is available: 24.3.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip
===================================================================== test session starts ======================================================================
platform linux -- Python 3.13.1, pytest-8.4.1, pluggy-1.6.0
rootdir: /tests
plugins: anyio-4.9.0
collected 3 items

../tests/test_outputs.py .FF                                                                                                                             [100%]

=========================================================================== FAILURES ===========================================================================
____________________________________________________________________ test_model_registered _____________________________________________________________________

    def test_model_registered():
        """Ensure the model is registered."""
        mlflow.set_tracking_uri(uri="http://localhost:8080")

        client = mlflow.tracking.MlflowClient()
        registered_models = client.search_registered_models()

        model_found = False
        for model in registered_models:
            if model.name == "gpt-5":
                model_found = True
                break

>       assert model_found, "Model 'gpt-5' was not registered"
E       AssertionError: Model 'gpt-5' was not registered
E       assert False

/tests/test_outputs.py:31: AssertionError
____________________________________________________________________ test_model_dimensions _____________________________________________________________________

    def test_model_dimensions():
        mlflow.set_tracking_uri(uri="http://localhost:8080")

        model_name = "gpt-5"
        model_version = "latest"

>       model = mlflow.sklearn.load_model(f"models:/{model_name}/{model_version}")
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/tests/test_outputs.py:40:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
/usr/local/lib/python3.13/site-packages/mlflow/sklearn/__init__.py:633: in load_model
    local_model_path = _download_artifact_from_uri(artifact_uri=model_uri, output_path=dst_path)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/mlflow/tracking/artifact_utils.py:108: in _download_artifact_from_uri
    repo = get_artifact_repository(artifact_uri=root_uri)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/mlflow/store/artifact/artifact_repository_registry.py:133: in get_artifact_repository
    return _artifact_repository_registry.get_artifact_repository(artifact_uri)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/mlflow/store/artifact/artifact_repository_registry.py:77: in get_artifact_repository
    return repository(artifact_uri)
           ^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/mlflow/store/artifact/models_artifact_repo.py:69: in __init__
    ) = ModelsArtifactRepository._get_model_uri_infos(artifact_uri)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/mlflow/store/artifact/models_artifact_repo.py:112: in _get_model_uri_infos
    name, version = get_model_name_and_version(client, uri)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/mlflow/store/artifact/utils/models.py:99: in get_model_name_and_version
    return model_name, str(_get_latest_model_version(client, model_name, model_stage))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/mlflow/store/artifact/utils/models.py:31: in _get_latest_model_version
    latest = client.get_latest_versions(name, None if stage is None else [stage])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/mlflow/tracking/_model_registry/client.py:161: in get_latest_versions
    return self.store.get_latest_versions(name, stages)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/mlflow/store/model_registry/rest_store.py:193: in get_latest_versions
    response_proto = self._call_endpoint(GetLatestVersions, req_body, call_all_endpoints=True)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.13/site-packages/mlflow/store/model_registry/base_rest_store.py:39: in _call_endpoint
    return call_endpoints(
/usr/local/lib/python3.13/site-packages/mlflow/utils/rest_utils.py:420: in call_endpoints
    raise e
/usr/local/lib/python3.13/site-packages/mlflow/utils/rest_utils.py:415: in call_endpoints
    return call_endpoint(
/usr/local/lib/python3.13/site-packages/mlflow/utils/rest_utils.py:402: in call_endpoint
    response = verify_rest_response(response, endpoint)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

response = <Response [404]>, endpoint = '/api/2.0/mlflow/registered-models/get-latest-versions'

    def verify_rest_response(response, endpoint):
        """Verify the return code and format, raise exception if the request was not successful."""
        # Handle Armeria-specific response case where response text is "200 OK"
        if response.status_code == 200 and response.text.strip() == _ARMERIA_OK:
            response._content = b"{}"  # Update response content to be an empty JSON dictionary
            return response

        # Handle non-200 status codes
        if response.status_code != 200:
            if _can_parse_as_json_object(response.text):
>               raise RestException(json.loads(response.text))
E               mlflow.exceptions.RestException: RESOURCE_DOES_NOT_EXIST: Registered Model with name=gpt-5 not found

/usr/local/lib/python3.13/site-packages/mlflow/utils/rest_utils.py:259: RestException
======================================================================= warnings summary =======================================================================
../usr/local/lib/python3.13/site-packages/pydantic/_internal/_config.py:323
  /usr/local/lib/python3.13/site-packages/pydantic/_internal/_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use Conf
igDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/
    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
============================================================================ PASSES ============================================================================
=================================================================== short test summary info ====================================================================
PASSED ../tests/test_outputs.py::test_mlflow_server_running
FAILED ../tests/test_outputs.py::test_model_registered - AssertionError: Model 'gpt-5' was not registered
FAILED ../tests/test_outputs.py::test_model_dimensions - mlflow.exceptions.RestException: RESOURCE_DOES_NOT_EXIST: Registered Model with name=gpt-5 not found
============================================================ 2 failed, 1 passed, 1 warning in 3.07s ============================================================
root@4f533a935f3e:/app#
