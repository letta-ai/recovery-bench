['asciinema rec --stdin /logs/agent.cast', 'Enter']
['clear', 'Enter']
'echo "# Python script to replicate COBOL program functionality" > /app/program.py\n'
'echo "def main():" >> /app/program.py\n'
'echo "    with open(\'/app/src/INPUT.DAT\', \'r\') as input_file:" >> /app/program.py\n'
'echo "        data = input_file.read()" >> /app/program.py\n'
'echo "    # Logic to modify .DAT files will go here" >> /app/program.py\n'
'echo "if __name__ == \'__main__\':" >> /app/program.py\n'
'echo "    main()" >> /app/program.py\n'
'cat /app/src/program.cbl\n'
'echo "def process_transactions(data):" >> /app/program.py\n'
'echo "    WS_BUYER_ID, WS_SELLER_ID, WS_AMOUNT, WS_BOOK_ID = data.split(\',\')" >> /app/program.py\n'
'echo "    # Update ACCOUNTS.DAT" >> /app/program.py\n'
'echo "    with open(\'/app/data/ACCOUNTS.DAT\', \'r+\') as accounts_file:" >> /app/program.py\n'
'echo "        accounts = accounts_file.readlines()" >> /app/program.py\n'
'echo "        for account in accounts:" >> /app/program.py\n'
'echo "            ACCOUNT_ID, ACCOUNT_BALANCE = account.split(\',\')" >> /app/program.py\n'
'echo "            if ACCOUNT_ID == WS_BUYER_ID:" >> /app/program.py\n'
'echo "                ACCOUNT_BALANCE = str(float(ACCOUNT_BALANCE) - float(WS_AMOUNT))" >> /app/program.py\n'
'echo "                accounts_file.write(f\'{ACCOUNT_ID},{ACCOUNT_BALANCE}\\n\')" >> /app/program.py\n'
'echo "            elif ACCOUNT_ID == WS_SELLER_ID:" >> /app/program.py\n'
'echo "                ACCOUNT_BALANCE = str(float(ACCOUNT_BALANCE) + float(WS_AMOUNT))" >> /app/program.py\n'
'echo "                accounts_file.write(f\'{ACCOUNT_ID},{ACCOUNT_BALANCE}\\n\')" >> /app/program.py\n'
'echo "    # Update BOOKS.DAT" >> /app/program.py\n'
'echo "    with open(\'/app/data/BOOKS.DAT\', \'r+\') as books_file:" >> /app/program.py\n'
'echo "        books = books_file.readlines()" >> /app/program.py\n'
'echo "        for book in books:" >> /app/program.py\n'
'echo "            BOOK_ID, BOOK_OWNER = book.split(\',\')" >> /app/program.py\n'
'echo "            if BOOK_ID == WS_BOOK_ID:" >> /app/program.py\n'
'echo "                BOOK_OWNER = WS_BUYER_ID" >> /app/program.py\n'
'echo "                books_file.write(f\'{BOOK_ID},{BOOK_OWNER}\\n\')" >> /app/program.py\n'
'echo "    # Log to TRANSACTIONS.DAT" >> /app/program.py\n'
'echo "    with open(\'/app/data/TRANSACTIONS.DAT\', \'a\') as transactions_file:" >> /app/program.py\n'
'echo "        transactions_file.write(f\'{WS_BUYER_ID},{WS_SELLER_ID},{WS_BOOK_ID},{WS_AMOUNT}\\n\')" >> /app/program.py\n'
'echo "    print(\'Transaction completed successfully\')" >> /app/program.py\n'
'echo "import sys" >> /app/program.py\n'
'echo "if __name__ == \'__main__\':" >> /app/program.py\n'
'echo "    with open(\'/app/src/INPUT.DAT\', \'r\') as input_file:" >> /app/program.py\n'
'echo "        for line in input_file:" >> /app/program.py\n'
'echo "            process_transactions(line.strip())" >> /app/program.py\n'
'python3 /app/program.py\n'
'echo "    if len(data.split(\',\')) != 4:") >> /app/program.py\n'
'echo "    if len(data.split(\',\')) != 4:" >> /app/program.py\n'
'echo "        print(f\'Invalid input line: {data}\')" >> /app/program.py\n'
'echo "        return" >> /app/program.py\n'
'cat /app/src/INPUT.DAT\n'
'echo "U001,U002,7200,BOOK001" > /app/src/INPUT.DAT\n'
'python3 /app/program.py\n'
"sed -i '/return/d' /app/program.py\n"
'echo "        return" >> /app/program.py\n'
'python3 /app/program.py\n'
"sed -i '/return/d' /app/program.py\n"
'echo "def process_transactions(data):" > /app/program.py\n'
'echo "def process_transactions(data):" > /app/program.py\n'
'echo "def process_transactions(data):" > /app/program.py\n'
'echo "def process_transactions(data):" > /app/program.py\n'
'echo "def process_transactions(data):" > /app/program.py\n'
'echo "def process_transactions(data):" > /app/program.py\n'
'echo "def process_transactions(data):" > /app/program.py\n'
'echo "def process_transactions(data):" > /app/program.py\n'
'echo "def process_transactions(data):" > /app/program.py\n'
'echo "def process_transactions(data):" > /app/program.py\n'
'echo "def process_transactions(data):" > /app/program.py\n'
'echo "def process_transactions(data):" > /app/program.py\n'
'echo "def process_transactions(data):" > /app/program.py\n'
'echo "def process_transactions(data):" > /app/program.py\n'
'echo "def process_transactions(data):" > /app/program.py\n'
'echo "def process_transactions(data):" > /app/program.py\n'
'echo "def process_transactions(data):" > /app/program.py\n'
'echo "def process_transactions(data):" > /app/program.py\n'
'echo "def process_transactions(data):" > /app/program.py\n'
'echo "def process_transactions(data):" > /app/program.py\n'
'echo "def process_transactions(data):" > /app/program.py\n'
'echo "def process_transactions(data):" > /app/program.py\n'
'echo "def process_transactions(data):" > /app/program.py\n'
'echo "def process_transactions(data):" > /app/program.py\n'
['asciinema rec --stdin /logs/tests.cast', 'Enter']
['clear', 'Enter']
['bash ', '/tests/run-tests.sh', 'Enter']
['C-d']
['C-d']
'echo "def process_transactions(data):" > /app/program.py\n'
'echo "    if len(data.split(\',\')) != 4:" >> /app/program.py\n'
'echo "        print(f\'Invalid input line: {data}\')" >> /app/program.py\n'
'echo "        return" >> /app/program.py\n'
'echo "    WS_BUYER_ID, WS_SELLER_ID, WS_AMOUNT, WS_BOOK_ID = data.split(\',\')" >> /app/program.py\n'
'echo "    # Update ACCOUNTS.DAT" >> /app/program.py\n'
'echo "    with open(\'/app/data/ACCOUNTS.DAT\', \'r+\') as accounts_file:" >> /app/program.py\n'
